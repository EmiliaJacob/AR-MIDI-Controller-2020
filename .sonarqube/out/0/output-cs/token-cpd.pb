ÁJ
àC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModuleAudio.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class 
DOTweenModuleAudio '
{ 
public 
static 
TweenerCore !
<! "
float" '
,' (
float) .
,. /
FloatOptions0 <
>< =
DOFade> D
(D E
thisE I
AudioSourceJ U
targetV \
,\ ]
float^ c
endValued l
,l m
floatn s
durationt |
)| }
{ 	
if 
( 
endValue 
< 
$num 
) 
endValue &
=' (
$num) *
;* +
else 
if 
( 
endValue 
> 
$num  !
)! "
endValue# +
=, -
$num. /
;/ 0
TweenerCore 
< 
float 
, 
float $
,$ %
FloatOptions& 2
>2 3
t4 5
=6 7
DOTween8 ?
.? @
To@ B
(B C
(C D
)D E
=>F H
targetI O
.O P
volumeP V
,V W
xX Y
=>Z \
target] c
.c d
volumed j
=k l
xm n
,n o
endValuep x
,x y
duration	z Ç
)
Ç É
;
É Ñ
t 
. 
	SetTarget 
( 
target 
) 
;  
return 
t 
; 
}   	
public%% 
static%% 
TweenerCore%% !
<%%! "
float%%" '
,%%' (
float%%) .
,%%. /
FloatOptions%%0 <
>%%< =
DOPitch%%> E
(%%E F
this%%F J
AudioSource%%K V
target%%W ]
,%%] ^
float%%_ d
endValue%%e m
,%%m n
float%%o t
duration%%u }
)%%} ~
{&& 	
TweenerCore'' 
<'' 
float'' 
,'' 
float'' $
,''$ %
FloatOptions''& 2
>''2 3
t''4 5
=''6 7
DOTween''8 ?
.''? @
To''@ B
(''B C
(''C D
)''D E
=>''F H
target''I O
.''O P
pitch''P U
,''U V
x''W X
=>''Y [
target''\ b
.''b c
pitch''c h
=''i j
x''k l
,''l m
endValue''n v
,''v w
duration	''x Ä
)
''Ä Å
;
''Å Ç
t(( 
.(( 
	SetTarget(( 
((( 
target(( 
)(( 
;((  
return)) 
t)) 
;)) 
}** 	
public66 
static66 
TweenerCore66 !
<66! "
float66" '
,66' (
float66) .
,66. /
FloatOptions660 <
>66< =

DOSetFloat66> H
(66H I
this66I M

AudioMixer66N X
target66Y _
,66_ `
string66a g
	floatName66h q
,66q r
float66s x
endValue	66y Å
,
66Å Ç
float
66É à
duration
66â ë
)
66ë í
{77 	
TweenerCore88 
<88 
float88 
,88 
float88 $
,88$ %
FloatOptions88& 2
>882 3
t884 5
=886 7
DOTween888 ?
.88? @
To88@ B
(88B C
(88C D
)88D E
=>88E G
{88H I
float99 
currVal99 !
;99! "
target:: 
.:: 
GetFloat:: #
(::# $
	floatName::$ -
,::- .
out::/ 2
currVal::3 :
)::: ;
;::; <
return;; 
currVal;; "
;;;" #
}<< 
,<< 
x<< 
=><< 
target<< 
.<< 
SetFloat<< &
(<<& '
	floatName<<' 0
,<<0 1
x<<2 3
)<<3 4
,<<4 5
endValue<<6 >
,<<> ?
duration<<@ H
)<<H I
;<<I J
t== 
.== 
	SetTarget== 
(== 
target== 
)== 
;==  
return>> 
t>> 
;>> 
}?? 	
publicKK 
staticKK 
intKK 

DOCompleteKK $
(KK$ %
thisKK% )

AudioMixerKK* 4
targetKK5 ;
,KK; <
boolKK= A
withCallbacksKKB O
=KKP Q
falseKKR W
)KKW X
{LL 	
returnMM 
DOTweenMM 
.MM 
CompleteMM #
(MM# $
targetMM$ *
,MM* +
withCallbacksMM, 9
)MM9 :
;MM: ;
}NN 	
publicVV 
staticVV 
intVV 
DOKillVV  
(VV  !
thisVV! %

AudioMixerVV& 0
targetVV1 7
,VV7 8
boolVV9 =
completeVV> F
=VVG H
falseVVI N
)VVN O
{WW 	
returnXX 
DOTweenXX 
.XX 
KillXX 
(XX  
targetXX  &
,XX& '
completeXX( 0
)XX0 1
;XX1 2
}YY 	
public`` 
static`` 
int`` 
DOFlip``  
(``  !
this``! %

AudioMixer``& 0
target``1 7
)``7 8
{aa 	
returnbb 
DOTweenbb 
.bb 
Flipbb 
(bb  
targetbb  &
)bb& '
;bb' (
}cc 	
publicmm 
staticmm 
intmm 
DOGotomm  
(mm  !
thismm! %

AudioMixermm& 0
targetmm1 7
,mm7 8
floatmm9 >
tomm? A
,mmA B
boolmmC G
andPlaymmH O
=mmP Q
falsemmR W
)mmW X
{nn 	
returnoo 
DOTweenoo 
.oo 
Gotooo 
(oo  
targetoo  &
,oo& '
tooo( *
,oo* +
andPlayoo, 3
)oo3 4
;oo4 5
}pp 	
publicww 
staticww 
intww 
DOPauseww !
(ww! "
thisww" &

AudioMixerww' 1
targetww2 8
)ww8 9
{xx 	
returnyy 
DOTweenyy 
.yy 
Pauseyy  
(yy  !
targetyy! '
)yy' (
;yy( )
}zz 	
public
ÅÅ 
static
ÅÅ 
int
ÅÅ 
DOPlay
ÅÅ  
(
ÅÅ  !
this
ÅÅ! %

AudioMixer
ÅÅ& 0
target
ÅÅ1 7
)
ÅÅ7 8
{
ÇÇ 	
return
ÉÉ 
DOTween
ÉÉ 
.
ÉÉ 
Play
ÉÉ 
(
ÉÉ  
target
ÉÉ  &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 	
public
ãã 
static
ãã 
int
ãã 
DOPlayBackwards
ãã )
(
ãã) *
this
ãã* .

AudioMixer
ãã/ 9
target
ãã: @
)
ãã@ A
{
åå 	
return
çç 
DOTween
çç 
.
çç 
PlayBackwards
çç (
(
çç( )
target
çç) /
)
çç/ 0
;
çç0 1
}
éé 	
public
ïï 
static
ïï 
int
ïï 
DOPlayForward
ïï '
(
ïï' (
this
ïï( ,

AudioMixer
ïï- 7
target
ïï8 >
)
ïï> ?
{
ññ 	
return
óó 
DOTween
óó 
.
óó 
PlayForward
óó &
(
óó& '
target
óó' -
)
óó- .
;
óó. /
}
òò 	
public
üü 
static
üü 
int
üü 
	DORestart
üü #
(
üü# $
this
üü$ (

AudioMixer
üü) 3
target
üü4 :
)
üü: ;
{
†† 	
return
°° 
DOTween
°° 
.
°° 
Restart
°° "
(
°°" #
target
°°# )
)
°°) *
;
°°* +
}
¢¢ 	
public
©© 
static
©© 
int
©© 
DORewind
©© "
(
©©" #
this
©©# '

AudioMixer
©©( 2
target
©©3 9
)
©©9 :
{
™™ 	
return
´´ 
DOTween
´´ 
.
´´ 
Rewind
´´ !
(
´´! "
target
´´" (
)
´´( )
;
´´) *
}
¨¨ 	
public
≥≥ 
static
≥≥ 
int
≥≥ 
DOSmoothRewind
≥≥ (
(
≥≥( )
this
≥≥) -

AudioMixer
≥≥. 8
target
≥≥9 ?
)
≥≥? @
{
¥¥ 	
return
µµ 
DOTween
µµ 
.
µµ 
SmoothRewind
µµ '
(
µµ' (
target
µµ( .
)
µµ. /
;
µµ/ 0
}
∂∂ 	
public
ΩΩ 
static
ΩΩ 
int
ΩΩ 
DOTogglePause
ΩΩ '
(
ΩΩ' (
this
ΩΩ( ,

AudioMixer
ΩΩ- 7
target
ΩΩ8 >
)
ΩΩ> ?
{
ææ 	
return
øø 
DOTween
øø 
.
øø 
TogglePause
øø &
(
øø& '
target
øø' -
)
øø- .
;
øø. /
}
¿¿ 	
}
»» 
}…… åœ
äC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModulePhysics.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class  
DOTweenModulePhysics )
{ 
public 
static 
TweenerCore !
<! "
Vector3" )
,) *
Vector3+ 2
,2 3
VectorOptions4 A
>A B
DOMoveC I
(I J
thisJ N
	RigidbodyO X
targetY _
,_ `
Vector3a h
endValuei q
,q r
floats x
duration	y Å
,
Å Ç
bool
É á
snapping
à ê
=
ë í
false
ì ò
)
ò ô
{ 	
TweenerCore 
< 
Vector3 
,  
Vector3! (
,( )
VectorOptions* 7
>7 8
t9 :
=; <
DOTween= D
.D E
ToE G
(G H
(H I
)I J
=>K M
targetN T
.T U
positionU ]
,] ^
target_ e
.e f
MovePositionf r
,r s
endValuet |
,| }
duration	~ Ü
)
Ü á
;
á à
t 
. 

SetOptions 
( 
snapping !
)! "
." #
	SetTarget# ,
(, -
target- 3
)3 4
;4 5
return 
t 
; 
} 	
public%% 
static%% 
TweenerCore%% !
<%%! "
Vector3%%" )
,%%) *
Vector3%%+ 2
,%%2 3
VectorOptions%%4 A
>%%A B
DOMoveX%%C J
(%%J K
this%%K O
	Rigidbody%%P Y
target%%Z `
,%%` a
float%%b g
endValue%%h p
,%%p q
float%%r w
duration	%%x Ä
,
%%Ä Å
bool
%%Ç Ü
snapping
%%á è
=
%%ê ë
false
%%í ó
)
%%ó ò
{&& 	
TweenerCore'' 
<'' 
Vector3'' 
,''  
Vector3''! (
,''( )
VectorOptions''* 7
>''7 8
t''9 :
=''; <
DOTween''= D
.''D E
To''E G
(''G H
(''H I
)''I J
=>''K M
target''N T
.''T U
position''U ]
,''] ^
target''_ e
.''e f
MovePosition''f r
,''r s
new''t w
Vector3''x 
(	'' Ä
endValue
''Ä à
,
''à â
$num
''ä ã
,
''ã å
$num
''ç é
)
''é è
,
''è ê
duration
''ë ô
)
''ô ö
;
''ö õ
t(( 
.(( 

SetOptions(( 
((( 
AxisConstraint(( '
.((' (
X((( )
,(() *
snapping((+ 3
)((3 4
.((4 5
	SetTarget((5 >
(((> ?
target((? E
)((E F
;((F G
return)) 
t)) 
;)) 
}** 	
public00 
static00 
TweenerCore00 !
<00! "
Vector300" )
,00) *
Vector300+ 2
,002 3
VectorOptions004 A
>00A B
DOMoveY00C J
(00J K
this00K O
	Rigidbody00P Y
target00Z `
,00` a
float00b g
endValue00h p
,00p q
float00r w
duration	00x Ä
,
00Ä Å
bool
00Ç Ü
snapping
00á è
=
00ê ë
false
00í ó
)
00ó ò
{11 	
TweenerCore22 
<22 
Vector322 
,22  
Vector322! (
,22( )
VectorOptions22* 7
>227 8
t229 :
=22; <
DOTween22= D
.22D E
To22E G
(22G H
(22H I
)22I J
=>22K M
target22N T
.22T U
position22U ]
,22] ^
target22_ e
.22e f
MovePosition22f r
,22r s
new22t w
Vector322x 
(	22 Ä
$num
22Ä Å
,
22Å Ç
endValue
22É ã
,
22ã å
$num
22ç é
)
22é è
,
22è ê
duration
22ë ô
)
22ô ö
;
22ö õ
t33 
.33 

SetOptions33 
(33 
AxisConstraint33 '
.33' (
Y33( )
,33) *
snapping33+ 3
)333 4
.334 5
	SetTarget335 >
(33> ?
target33? E
)33E F
;33F G
return44 
t44 
;44 
}55 	
public;; 
static;; 
TweenerCore;; !
<;;! "
Vector3;;" )
,;;) *
Vector3;;+ 2
,;;2 3
VectorOptions;;4 A
>;;A B
DOMoveZ;;C J
(;;J K
this;;K O
	Rigidbody;;P Y
target;;Z `
,;;` a
float;;b g
endValue;;h p
,;;p q
float;;r w
duration	;;x Ä
,
;;Ä Å
bool
;;Ç Ü
snapping
;;á è
=
;;ê ë
false
;;í ó
)
;;ó ò
{<< 	
TweenerCore== 
<== 
Vector3== 
,==  
Vector3==! (
,==( )
VectorOptions==* 7
>==7 8
t==9 :
===; <
DOTween=== D
.==D E
To==E G
(==G H
(==H I
)==I J
=>==K M
target==N T
.==T U
position==U ]
,==] ^
target==_ e
.==e f
MovePosition==f r
,==r s
new==t w
Vector3==x 
(	== Ä
$num
==Ä Å
,
==Å Ç
$num
==É Ñ
,
==Ñ Ö
endValue
==Ü é
)
==é è
,
==è ê
duration
==ë ô
)
==ô ö
;
==ö õ
t>> 
.>> 

SetOptions>> 
(>> 
AxisConstraint>> '
.>>' (
Z>>( )
,>>) *
snapping>>+ 3
)>>3 4
.>>4 5
	SetTarget>>5 >
(>>> ?
target>>? E
)>>E F
;>>F G
return?? 
t?? 
;?? 
}@@ 	
publicFF 
staticFF 
TweenerCoreFF !
<FF! "

QuaternionFF" ,
,FF, -
Vector3FF. 5
,FF5 6
QuaternionOptionsFF7 H
>FFH I
DORotateFFJ R
(FFR S
thisFFS W
	RigidbodyFFX a
targetFFb h
,FFh i
Vector3FFj q
endValueFFr z
,FFz {
float	FF| Å
duration
FFÇ ä
,
FFä ã

RotateMode
FFå ñ
mode
FFó õ
=
FFú ù

RotateMode
FFû ®
.
FF® ©
Fast
FF© ≠
)
FF≠ Æ
{GG 	
TweenerCoreHH 
<HH 

QuaternionHH "
,HH" #
Vector3HH$ +
,HH+ ,
QuaternionOptionsHH- >
>HH> ?
tHH@ A
=HHB C
DOTweenHHD K
.HHK L
ToHHL N
(HHN O
(HHO P
)HHP Q
=>HHR T
targetHHU [
.HH[ \
rotationHH\ d
,HHd e
targetHHf l
.HHl m
MoveRotationHHm y
,HHy z
endValue	HH{ É
,
HHÉ Ñ
duration
HHÖ ç
)
HHç é
;
HHé è
tII 
.II 
	SetTargetII 
(II 
targetII 
)II 
;II  
tJJ 
.JJ 
plugOptionsJJ 
.JJ 

rotateModeJJ $
=JJ% &
modeJJ' +
;JJ+ ,
returnKK 
tKK 
;KK 
}LL 	
publicSS 
staticSS 
TweenerCoreSS !
<SS! "

QuaternionSS" ,
,SS, -
Vector3SS. 5
,SS5 6
QuaternionOptionsSS7 H
>SSH I
DOLookAtSSJ R
(SSR S
thisSSS W
	RigidbodySSX a
targetSSb h
,SSh i
Vector3SSj q
towardsSSr y
,SSy z
float	SS{ Ä
duration
SSÅ â
,
SSâ ä
AxisConstraint
SSã ô
axisConstraint
SSö ®
=
SS© ™
AxisConstraint
SS´ π
.
SSπ ∫
None
SS∫ æ
,
SSæ ø
Vector3
SS¿ «
?
SS« »
up
SS… À
=
SSÃ Õ
null
SSŒ “
)
SS“ ”
{TT 	
TweenerCoreUU 
<UU 

QuaternionUU "
,UU" #
Vector3UU$ +
,UU+ ,
QuaternionOptionsUU- >
>UU> ?
tUU@ A
=UUB C
DOTweenUUD K
.UUK L
ToUUL N
(UUN O
(UUO P
)UUP Q
=>UUR T
targetUUU [
.UU[ \
rotationUU\ d
,UUd e
targetUUf l
.UUl m
MoveRotationUUm y
,UUy z
towards	UU{ Ç
,
UUÇ É
duration
UUÑ å
)
UUå ç
.VV 
	SetTargetVV 
(VV 
targetVV !
)VV! "
.VV" #!
SetSpecialStartupModeVV# 8
(VV8 9
SpecialStartupModeVV9 K
.VVK L
	SetLookAtVVL U
)VVU V
;VVV W
tWW 
.WW 
plugOptionsWW 
.WW 
axisConstraintWW (
=WW) *
axisConstraintWW+ 9
;WW9 :
tXX 
.XX 
plugOptionsXX 
.XX 
upXX 
=XX 
(XX  
upXX  "
==XX# %
nullXX& *
)XX* +
?XX, -
Vector3XX. 5
.XX5 6
upXX6 8
:XX9 :
(XX; <
Vector3XX< C
)XXC D
upXXD F
;XXF G
returnYY 
tYY 
;YY 
}ZZ 	
publicff 
staticff 
Sequenceff 
DOJumpff %
(ff% &
thisff& *
	Rigidbodyff+ 4
targetff5 ;
,ff; <
Vector3ff= D
endValueffE M
,ffM N
floatffO T
	jumpPowerffU ^
,ff^ _
intff` c
numJumpsffd l
,ffl m
floatffn s
durationfft |
,ff| }
bool	ff~ Ç
snapping
ffÉ ã
=
ffå ç
false
ffé ì
)
ffì î
{gg 	
ifhh 
(hh 
numJumpshh 
<hh 
$numhh 
)hh 
numJumpshh &
=hh' (
$numhh) *
;hh* +
floatii 
	startPosYii 
=ii 
$numii 
;ii  
floatjj 
offsetYjj 
=jj 
-jj 
$numjj 
;jj 
boolkk 

offsetYSetkk 
=kk 
falsekk #
;kk# $
Sequencell 
sll 
=ll 
DOTweenll  
.ll  !
Sequencell! )
(ll) *
)ll* +
;ll+ ,
Tweenmm 
yTweenmm 
=mm 
DOTweenmm "
.mm" #
Tomm# %
(mm% &
(mm& '
)mm' (
=>mm) +
targetmm, 2
.mm2 3
positionmm3 ;
,mm; <
targetmm= C
.mmC D
MovePositionmmD P
,mmP Q
newmmR U
Vector3mmV ]
(mm] ^
$nummm^ _
,mm_ `
	jumpPowermma j
,mmj k
$nummml m
)mmm n
,mmn o
durationmmp x
/mmy z
(mm{ |
numJumps	mm| Ñ
*
mmÖ Ü
$num
mmá à
)
mmà â
)
mmâ ä
.nn 

SetOptionsnn 
(nn 
AxisConstraintnn *
.nn* +
Ynn+ ,
,nn, -
snappingnn. 6
)nn6 7
.nn7 8
SetEasenn8 ?
(nn? @
Easenn@ D
.nnD E
OutQuadnnE L
)nnL M
.nnM N
SetRelativennN Y
(nnY Z
)nnZ [
.oo 
SetLoopsoo 
(oo 
numJumpsoo "
*oo# $
$numoo% &
,oo& '
LoopTypeoo( 0
.oo0 1
Yoyooo1 5
)oo5 6
.pp 
OnStartpp 
(pp 
(pp 
)pp 
=>pp 
	startPosYpp (
=pp) *
targetpp+ 1
.pp1 2
positionpp2 :
.pp: ;
ypp; <
)pp< =
;pp= >
sqq 
.qq 
Appendqq 
(qq 
DOTweenqq 
.qq 
Toqq 
(qq  
(qq  !
)qq! "
=>qq# %
targetqq& ,
.qq, -
positionqq- 5
,qq5 6
targetqq7 =
.qq= >
MovePositionqq> J
,qqJ K
newqqL O
Vector3qqP W
(qqW X
endValueqqX `
.qq` a
xqqa b
,qqb c
$numqqd e
,qqe f
$numqqg h
)qqh i
,qqi j
durationqqk s
)qqs t
.rr 

SetOptionsrr 
(rr  
AxisConstraintrr  .
.rr. /
Xrr/ 0
,rr0 1
snappingrr2 :
)rr: ;
.rr; <
SetEaserr< C
(rrC D
EaserrD H
.rrH I
LinearrrI O
)rrO P
)ss 
.ss 
Joinss 
(ss 
DOTweenss 
.ss 
Toss !
(ss! "
(ss" #
)ss# $
=>ss% '
targetss( .
.ss. /
positionss/ 7
,ss7 8
targetss9 ?
.ss? @
MovePositionss@ L
,ssL M
newssN Q
Vector3ssR Y
(ssY Z
$numssZ [
,ss[ \
$numss] ^
,ss^ _
endValuess` h
.ssh i
zssi j
)ssj k
,ssk l
durationssm u
)ssu v
.tt 

SetOptionstt 
(tt  
AxisConstrainttt  .
.tt. /
Ztt/ 0
,tt0 1
snappingtt2 :
)tt: ;
.tt; <
SetEasett< C
(ttC D
EasettD H
.ttH I
LinearttI O
)ttO P
)uu 
.uu 
Joinuu 
(uu 
yTweenuu 
)uu 
.vv 
	SetTargetvv 
(vv 
targetvv !
)vv! "
.vv" #
SetEasevv# *
(vv* +
DOTweenvv+ 2
.vv2 3
defaultEaseTypevv3 B
)vvB C
;vvC D
yTweenww 
.ww 
OnUpdateww 
(ww 
(ww 
)ww 
=>ww !
{ww" #
ifxx 
(xx 
!xx 

offsetYSetxx 
)xx  
{xx! "

offsetYSetyy 
=yy  
trueyy! %
;yy% &
offsetYzz 
=zz 
szz 
.zz  

isRelativezz  *
?zz+ ,
endValuezz- 5
.zz5 6
yzz6 7
:zz8 9
endValuezz: B
.zzB C
yzzC D
-zzE F
	startPosYzzG P
;zzP Q
}{{ 
Vector3|| 
pos|| 
=|| 
target|| $
.||$ %
position||% -
;||- .
pos}} 
.}} 
y}} 
+=}} 
	DOVirtual}} "
.}}" #

EasedValue}}# -
(}}- .
$num}}. /
,}}/ 0
offsetY}}1 8
,}}8 9
yTween}}: @
.}}@ A
ElapsedPercentage}}A R
(}}R S
)}}S T
,}}T U
Ease}}V Z
.}}Z [
OutQuad}}[ b
)}}b c
;}}c d
target~~ 
.~~ 
MovePosition~~ #
(~~# $
pos~~$ '
)~~' (
;~~( )
} 
) 
; 
return
ÄÄ 
s
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
èè 
static
èè 
TweenerCore
èè !
<
èè! "
Vector3
èè" )
,
èè) *
Path
èè+ /
,
èè/ 0
PathOptions
èè1 <
>
èè< =
DOPath
èè> D
(
èèD E
this
êê 
	Rigidbody
êê 
target
êê !
,
êê! "
Vector3
êê# *
[
êê* +
]
êê+ ,
path
êê- 1
,
êê1 2
float
êê3 8
duration
êê9 A
,
êêA B
PathType
êêC K
pathType
êêL T
=
êêU V
PathType
êêW _
.
êê_ `
Linear
êê` f
,
êêf g
PathMode
ëë 
pathMode
ëë 
=
ëë 
PathMode
ëë  (
.
ëë( )
Full3D
ëë) /
,
ëë/ 0
int
ëë1 4

resolution
ëë5 ?
=
ëë@ A
$num
ëëB D
,
ëëD E
Color
ëëF K
?
ëëK L

gizmoColor
ëëM W
=
ëëX Y
null
ëëZ ^
)
íí 	
{
ìì 	
if
îî 
(
îî 

resolution
îî 
<
îî 
$num
îî 
)
îî 

resolution
îî  *
=
îî+ ,
$num
îî- .
;
îî. /
TweenerCore
ïï 
<
ïï 
Vector3
ïï 
,
ïï  
Path
ïï! %
,
ïï% &
PathOptions
ïï' 2
>
ïï2 3
t
ïï4 5
=
ïï6 7
DOTween
ïï8 ?
.
ïï? @
To
ïï@ B
(
ïïB C

PathPlugin
ïïC M
.
ïïM N
Get
ïïN Q
(
ïïQ R
)
ïïR S
,
ïïS T
(
ïïU V
)
ïïV W
=>
ïïX Z
target
ïï[ a
.
ïïa b
position
ïïb j
,
ïïj k
target
ïïl r
.
ïïr s
MovePosition
ïïs 
,ïï Ä
newïïÅ Ñ
PathïïÖ â
(ïïâ ä
pathTypeïïä í
,ïïí ì
pathïïî ò
,ïïò ô

resolutionïïö §
,ïï§ •

gizmoColorïï¶ ∞
)ïï∞ ±
,ïï± ≤
durationïï≥ ª
)ïïª º
.
ññ 
	SetTarget
ññ 
(
ññ 
target
ññ !
)
ññ! "
.
ññ" #
	SetUpdate
ññ# ,
(
ññ, -

UpdateType
ññ- 7
.
ññ7 8
Fixed
ññ8 =
)
ññ= >
;
ññ> ?
t
òò 
.
òò 
plugOptions
òò 
.
òò 
isRigidbody
òò %
=
òò& '
true
òò( ,
;
òò, -
t
ôô 
.
ôô 
plugOptions
ôô 
.
ôô 
mode
ôô 
=
ôô  
pathMode
ôô! )
;
ôô) *
return
öö 
t
öö 
;
öö 
}
õõ 	
public
®® 
static
®® 
TweenerCore
®® !
<
®®! "
Vector3
®®" )
,
®®) *
Path
®®+ /
,
®®/ 0
PathOptions
®®1 <
>
®®< =
DOLocalPath
®®> I
(
®®I J
this
©© 
	Rigidbody
©© 
target
©© !
,
©©! "
Vector3
©©# *
[
©©* +
]
©©+ ,
path
©©- 1
,
©©1 2
float
©©3 8
duration
©©9 A
,
©©A B
PathType
©©C K
pathType
©©L T
=
©©U V
PathType
©©W _
.
©©_ `
Linear
©©` f
,
©©f g
PathMode
™™ 
pathMode
™™ 
=
™™ 
PathMode
™™  (
.
™™( )
Full3D
™™) /
,
™™/ 0
int
™™1 4

resolution
™™5 ?
=
™™@ A
$num
™™B D
,
™™D E
Color
™™F K
?
™™K L

gizmoColor
™™M W
=
™™X Y
null
™™Z ^
)
´´ 	
{
¨¨ 	
if
≠≠ 
(
≠≠ 

resolution
≠≠ 
<
≠≠ 
$num
≠≠ 
)
≠≠ 

resolution
≠≠  *
=
≠≠+ ,
$num
≠≠- .
;
≠≠. /
	Transform
ÆÆ 
trans
ÆÆ 
=
ÆÆ 
target
ÆÆ $
.
ÆÆ$ %
	transform
ÆÆ% .
;
ÆÆ. /
TweenerCore
ØØ 
<
ØØ 
Vector3
ØØ 
,
ØØ  
Path
ØØ! %
,
ØØ% &
PathOptions
ØØ' 2
>
ØØ2 3
t
ØØ4 5
=
ØØ6 7
DOTween
ØØ8 ?
.
ØØ? @
To
ØØ@ B
(
ØØB C

PathPlugin
ØØC M
.
ØØM N
Get
ØØN Q
(
ØØQ R
)
ØØR S
,
ØØS T
(
ØØU V
)
ØØV W
=>
ØØX Z
trans
ØØ[ `
.
ØØ` a
localPosition
ØØa n
,
ØØn o
x
ØØp q
=>
ØØr t
target
ØØu {
.
ØØ{ |
MovePositionØØ| à
(ØØà â
transØØâ é
.ØØé è
parentØØè ï
==ØØñ ò
nullØØô ù
?ØØû ü
xØØ† °
:ØØ¢ £
transØØ§ ©
.ØØ© ™
parentØØ™ ∞
.ØØ∞ ±
TransformPointØØ± ø
(ØØø ¿
xØØ¿ ¡
)ØØ¡ ¬
)ØØ¬ √
,ØØ√ ƒ
newØØ≈ »
PathØØ… Õ
(ØØÕ Œ
pathTypeØØŒ ÷
,ØØ÷ ◊
pathØØÿ ‹
,ØØ‹ ›

resolutionØØﬁ Ë
,ØØË È

gizmoColorØØÍ Ù
)ØØÙ ı
,ØØı ˆ
durationØØ˜ ˇ
)ØØˇ Ä
.
∞∞ 
	SetTarget
∞∞ 
(
∞∞ 
target
∞∞ !
)
∞∞! "
.
∞∞" #
	SetUpdate
∞∞# ,
(
∞∞, -

UpdateType
∞∞- 7
.
∞∞7 8
Fixed
∞∞8 =
)
∞∞= >
;
∞∞> ?
t
≤≤ 
.
≤≤ 
plugOptions
≤≤ 
.
≤≤ 
isRigidbody
≤≤ %
=
≤≤& '
true
≤≤( ,
;
≤≤, -
t
≥≥ 
.
≥≥ 
plugOptions
≥≥ 
.
≥≥ 
mode
≥≥ 
=
≥≥  
pathMode
≥≥! )
;
≥≥) *
t
¥¥ 
.
¥¥ 
plugOptions
¥¥ 
.
¥¥ 
useLocalPosition
¥¥ *
=
¥¥+ ,
true
¥¥- 1
;
¥¥1 2
return
µµ 
t
µµ 
;
µµ 
}
∂∂ 	
internal
∏∏ 
static
∏∏ 
TweenerCore
∏∏ #
<
∏∏# $
Vector3
∏∏$ +
,
∏∏+ ,
Path
∏∏- 1
,
∏∏1 2
PathOptions
∏∏3 >
>
∏∏> ?
DOPath
∏∏@ F
(
∏∏F G
this
ππ 
	Rigidbody
ππ 
target
ππ !
,
ππ! "
Path
ππ# '
path
ππ( ,
,
ππ, -
float
ππ. 3
duration
ππ4 <
,
ππ< =
PathMode
ππ> F
pathMode
ππG O
=
ππP Q
PathMode
ππR Z
.
ππZ [
Full3D
ππ[ a
)
∫∫ 	
{
ªª 	
TweenerCore
ºº 
<
ºº 
Vector3
ºº 
,
ºº  
Path
ºº! %
,
ºº% &
PathOptions
ºº' 2
>
ºº2 3
t
ºº4 5
=
ºº6 7
DOTween
ºº8 ?
.
ºº? @
To
ºº@ B
(
ººB C

PathPlugin
ººC M
.
ººM N
Get
ººN Q
(
ººQ R
)
ººR S
,
ººS T
(
ººU V
)
ººV W
=>
ººX Z
target
ºº[ a
.
ººa b
position
ººb j
,
ººj k
target
ººl r
.
ººr s
MovePosition
ººs 
,ºº Ä
pathººÅ Ö
,ººÖ Ü
durationººá è
)ººè ê
.
ΩΩ 
	SetTarget
ΩΩ 
(
ΩΩ 
target
ΩΩ !
)
ΩΩ! "
;
ΩΩ" #
t
øø 
.
øø 
plugOptions
øø 
.
øø 
isRigidbody
øø %
=
øø& '
true
øø( ,
;
øø, -
t
¿¿ 
.
¿¿ 
plugOptions
¿¿ 
.
¿¿ 
mode
¿¿ 
=
¿¿  
pathMode
¿¿! )
;
¿¿) *
return
¡¡ 
t
¡¡ 
;
¡¡ 
}
¬¬ 	
internal
√√ 
static
√√ 
TweenerCore
√√ #
<
√√# $
Vector3
√√$ +
,
√√+ ,
Path
√√- 1
,
√√1 2
PathOptions
√√3 >
>
√√> ?
DOLocalPath
√√@ K
(
√√K L
this
ƒƒ 
	Rigidbody
ƒƒ 
target
ƒƒ !
,
ƒƒ! "
Path
ƒƒ# '
path
ƒƒ( ,
,
ƒƒ, -
float
ƒƒ. 3
duration
ƒƒ4 <
,
ƒƒ< =
PathMode
ƒƒ> F
pathMode
ƒƒG O
=
ƒƒP Q
PathMode
ƒƒR Z
.
ƒƒZ [
Full3D
ƒƒ[ a
)
≈≈ 	
{
∆∆ 	
	Transform
«« 
trans
«« 
=
«« 
target
«« $
.
««$ %
	transform
««% .
;
««. /
TweenerCore
»» 
<
»» 
Vector3
»» 
,
»»  
Path
»»! %
,
»»% &
PathOptions
»»' 2
>
»»2 3
t
»»4 5
=
»»6 7
DOTween
»»8 ?
.
»»? @
To
»»@ B
(
»»B C

PathPlugin
»»C M
.
»»M N
Get
»»N Q
(
»»Q R
)
»»R S
,
»»S T
(
»»U V
)
»»V W
=>
»»X Z
trans
»»[ `
.
»»` a
localPosition
»»a n
,
»»n o
x
»»p q
=>
»»r t
target
»»u {
.
»»{ |
MovePosition»»| à
(»»à â
trans»»â é
.»»é è
parent»»è ï
==»»ñ ò
null»»ô ù
?»»û ü
x»»† °
:»»¢ £
trans»»§ ©
.»»© ™
parent»»™ ∞
.»»∞ ±
TransformPoint»»± ø
(»»ø ¿
x»»¿ ¡
)»»¡ ¬
)»»¬ √
,»»√ ƒ
path»»≈ …
,»»…  
duration»»À ”
)»»” ‘
.
…… 
	SetTarget
…… 
(
…… 
target
…… !
)
……! "
;
……" #
t
ÀÀ 
.
ÀÀ 
plugOptions
ÀÀ 
.
ÀÀ 
isRigidbody
ÀÀ %
=
ÀÀ& '
true
ÀÀ( ,
;
ÀÀ, -
t
ÃÃ 
.
ÃÃ 
plugOptions
ÃÃ 
.
ÃÃ 
mode
ÃÃ 
=
ÃÃ  
pathMode
ÃÃ! )
;
ÃÃ) *
t
ÕÕ 
.
ÕÕ 
plugOptions
ÕÕ 
.
ÕÕ 
useLocalPosition
ÕÕ *
=
ÕÕ+ ,
true
ÕÕ- 1
;
ÕÕ1 2
return
ŒŒ 
t
ŒŒ 
;
ŒŒ 
}
œœ 	
}
÷÷ 
}◊◊ ≠ë
åC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModulePhysics2D.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class "
DOTweenModulePhysics2D +
{ 
public 
static 
TweenerCore !
<! "
Vector2" )
,) *
Vector2+ 2
,2 3
VectorOptions4 A
>A B
DOMoveC I
(I J
thisJ N
Rigidbody2DO Z
target[ a
,a b
Vector2c j
endValuek s
,s t
floatu z
duration	{ É
,
É Ñ
bool
Ö â
snapping
ä í
=
ì î
false
ï ö
)
ö õ
{ 	
TweenerCore 
< 
Vector2 
,  
Vector2! (
,( )
VectorOptions* 7
>7 8
t9 :
=; <
DOTween= D
.D E
ToE G
(G H
(H I
)I J
=>K M
targetN T
.T U
positionU ]
,] ^
target_ e
.e f
MovePositionf r
,r s
endValuet |
,| }
duration	~ Ü
)
Ü á
;
á à
t 
. 

SetOptions 
( 
snapping !
)! "
." #
	SetTarget# ,
(, -
target- 3
)3 4
;4 5
return 
t 
; 
} 	
public$$ 
static$$ 
TweenerCore$$ !
<$$! "
Vector2$$" )
,$$) *
Vector2$$+ 2
,$$2 3
VectorOptions$$4 A
>$$A B
DOMoveX$$C J
($$J K
this$$K O
Rigidbody2D$$P [
target$$\ b
,$$b c
float$$d i
endValue$$j r
,$$r s
float$$t y
duration	$$z Ç
,
$$Ç É
bool
$$Ñ à
snapping
$$â ë
=
$$í ì
false
$$î ô
)
$$ô ö
{%% 	
TweenerCore&& 
<&& 
Vector2&& 
,&&  
Vector2&&! (
,&&( )
VectorOptions&&* 7
>&&7 8
t&&9 :
=&&; <
DOTween&&= D
.&&D E
To&&E G
(&&G H
(&&H I
)&&I J
=>&&K M
target&&N T
.&&T U
position&&U ]
,&&] ^
target&&_ e
.&&e f
MovePosition&&f r
,&&r s
new&&t w
Vector2&&x 
(	&& Ä
endValue
&&Ä à
,
&&à â
$num
&&ä ã
)
&&ã å
,
&&å ç
duration
&&é ñ
)
&&ñ ó
;
&&ó ò
t'' 
.'' 

SetOptions'' 
('' 
AxisConstraint'' '
.''' (
X''( )
,'') *
snapping''+ 3
)''3 4
.''4 5
	SetTarget''5 >
(''> ?
target''? E
)''E F
;''F G
return(( 
t(( 
;(( 
})) 	
public// 
static// 
TweenerCore// !
<//! "
Vector2//" )
,//) *
Vector2//+ 2
,//2 3
VectorOptions//4 A
>//A B
DOMoveY//C J
(//J K
this//K O
Rigidbody2D//P [
target//\ b
,//b c
float//d i
endValue//j r
,//r s
float//t y
duration	//z Ç
,
//Ç É
bool
//Ñ à
snapping
//â ë
=
//í ì
false
//î ô
)
//ô ö
{00 	
TweenerCore11 
<11 
Vector211 
,11  
Vector211! (
,11( )
VectorOptions11* 7
>117 8
t119 :
=11; <
DOTween11= D
.11D E
To11E G
(11G H
(11H I
)11I J
=>11K M
target11N T
.11T U
position11U ]
,11] ^
target11_ e
.11e f
MovePosition11f r
,11r s
new11t w
Vector211x 
(	11 Ä
$num
11Ä Å
,
11Å Ç
endValue
11É ã
)
11ã å
,
11å ç
duration
11é ñ
)
11ñ ó
;
11ó ò
t22 
.22 

SetOptions22 
(22 
AxisConstraint22 '
.22' (
Y22( )
,22) *
snapping22+ 3
)223 4
.224 5
	SetTarget225 >
(22> ?
target22? E
)22E F
;22F G
return33 
t33 
;33 
}44 	
public99 
static99 
TweenerCore99 !
<99! "
float99" '
,99' (
float99) .
,99. /
FloatOptions990 <
>99< =
DORotate99> F
(99F G
this99G K
Rigidbody2D99L W
target99X ^
,99^ _
float99` e
endValue99f n
,99n o
float99p u
duration99v ~
)99~ 
{:: 	
TweenerCore;; 
<;; 
float;; 
,;; 
float;; $
,;;$ %
FloatOptions;;& 2
>;;2 3
t;;4 5
=;;6 7
DOTween;;8 ?
.;;? @
To;;@ B
(;;B C
(;;C D
);;D E
=>;;F H
target;;I O
.;;O P
rotation;;P X
,;;X Y
target;;Z `
.;;` a
MoveRotation;;a m
,;;m n
endValue;;o w
,;;w x
duration	;;y Å
)
;;Å Ç
;
;;Ç É
t<< 
.<< 
	SetTarget<< 
(<< 
target<< 
)<< 
;<<  
return== 
t== 
;== 
}>> 	
publicKK 
staticKK 
SequenceKK 
DOJumpKK %
(KK% &
thisKK& *
Rigidbody2DKK+ 6
targetKK7 =
,KK= >
Vector2KK? F
endValueKKG O
,KKO P
floatKKQ V
	jumpPowerKKW `
,KK` a
intKKb e
numJumpsKKf n
,KKn o
floatKKp u
durationKKv ~
,KK~ 
bool
KKÄ Ñ
snapping
KKÖ ç
=
KKé è
false
KKê ï
)
KKï ñ
{LL 	
ifMM 
(MM 
numJumpsMM 
<MM 
$numMM 
)MM 
numJumpsMM &
=MM' (
$numMM) *
;MM* +
floatNN 
	startPosYNN 
=NN 
$numNN 
;NN  
floatOO 
offsetYOO 
=OO 
-OO 
$numOO 
;OO 
boolPP 

offsetYSetPP 
=PP 
falsePP #
;PP# $
SequenceQQ 
sQQ 
=QQ 
DOTweenQQ  
.QQ  !
SequenceQQ! )
(QQ) *
)QQ* +
;QQ+ ,
TweenRR 
yTweenRR 
=RR 
DOTweenRR "
.RR" #
ToRR# %
(RR% &
(RR& '
)RR' (
=>RR) +
targetRR, 2
.RR2 3
positionRR3 ;
,RR; <
xRR= >
=>RR? A
targetRRB H
.RRH I
positionRRI Q
=RRR S
xRRT U
,RRU V
newRRW Z
Vector2RR[ b
(RRb c
$numRRc d
,RRd e
	jumpPowerRRf o
)RRo p
,RRp q
durationRRr z
/RR{ |
(RR} ~
numJumps	RR~ Ü
*
RRá à
$num
RRâ ä
)
RRä ã
)
RRã å
.SS 

SetOptionsSS 
(SS 
AxisConstraintSS *
.SS* +
YSS+ ,
,SS, -
snappingSS. 6
)SS6 7
.SS7 8
SetEaseSS8 ?
(SS? @
EaseSS@ D
.SSD E
OutQuadSSE L
)SSL M
.SSM N
SetRelativeSSN Y
(SSY Z
)SSZ [
.TT 
SetLoopsTT 
(TT 
numJumpsTT "
*TT# $
$numTT% &
,TT& '
LoopTypeTT( 0
.TT0 1
YoyoTT1 5
)TT5 6
.UU 
OnStartUU 
(UU 
(UU 
)UU 
=>UU 
	startPosYUU (
=UU) *
targetUU+ 1
.UU1 2
positionUU2 :
.UU: ;
yUU; <
)UU< =
;UU= >
sVV 
.VV 
AppendVV 
(VV 
DOTweenVV 
.VV 
ToVV 
(VV  
(VV  !
)VV! "
=>VV# %
targetVV& ,
.VV, -
positionVV- 5
,VV5 6
xVV7 8
=>VV9 ;
targetVV< B
.VVB C
positionVVC K
=VVL M
xVVN O
,VVO P
newVVQ T
Vector2VVU \
(VV\ ]
endValueVV] e
.VVe f
xVVf g
,VVg h
$numVVi j
)VVj k
,VVk l
durationVVm u
)VVu v
.WW 

SetOptionsWW 
(WW  
AxisConstraintWW  .
.WW. /
XWW/ 0
,WW0 1
snappingWW2 :
)WW: ;
.WW; <
SetEaseWW< C
(WWC D
EaseWWD H
.WWH I
LinearWWI O
)WWO P
)XX 
.XX 
JoinXX 
(XX 
yTweenXX 
)XX 
.YY 
	SetTargetYY 
(YY 
targetYY !
)YY! "
.YY" #
SetEaseYY# *
(YY* +
DOTweenYY+ 2
.YY2 3
defaultEaseTypeYY3 B
)YYB C
;YYC D
yTweenZZ 
.ZZ 
OnUpdateZZ 
(ZZ 
(ZZ 
)ZZ 
=>ZZ !
{ZZ" #
if[[ 
([[ 
![[ 

offsetYSet[[ 
)[[  
{[[! "

offsetYSet\\ 
=\\  
true\\! %
;\\% &
offsetY]] 
=]] 
s]] 
.]]  

isRelative]]  *
?]]+ ,
endValue]]- 5
.]]5 6
y]]6 7
:]]8 9
endValue]]: B
.]]B C
y]]C D
-]]E F
	startPosY]]G P
;]]P Q
}^^ 
Vector3__ 
pos__ 
=__ 
target__ $
.__$ %
position__% -
;__- .
pos`` 
.`` 
y`` 
+=`` 
	DOVirtual`` "
.``" #

EasedValue``# -
(``- .
$num``. /
,``/ 0
offsetY``1 8
,``8 9
yTween``: @
.``@ A
ElapsedPercentage``A R
(``R S
)``S T
,``T U
Ease``V Z
.``Z [
OutQuad``[ b
)``b c
;``c d
targetaa 
.aa 
MovePositionaa #
(aa# $
posaa$ '
)aa' (
;aa( )
}bb 
)bb 
;bb 
returncc 
scc 
;cc 
}dd 	
publicrr 
staticrr 
TweenerCorerr !
<rr! "
Vector3rr" )
,rr) *
Pathrr+ /
,rr/ 0
PathOptionsrr1 <
>rr< =
DOPathrr> D
(rrD E
thisss 
Rigidbody2Dss 
targetss #
,ss# $
Vector2ss% ,
[ss, -
]ss- .
pathss/ 3
,ss3 4
floatss5 :
durationss; C
,ssC D
PathTypessE M
pathTypessN V
=ssW X
PathTypessY a
.ssa b
Linearssb h
,ssh i
PathModett 
pathModett 
=tt 
PathModett  (
.tt( )
Full3Dtt) /
,tt/ 0
inttt1 4

resolutiontt5 ?
=tt@ A
$numttB D
,ttD E
ColorttF K
?ttK L

gizmoColorttM W
=ttX Y
nullttZ ^
)uu 	
{vv 	
ifww 
(ww 

resolutionww 
<ww 
$numww 
)ww 

resolutionww  *
=ww+ ,
$numww- .
;ww. /
intxx 
lenxx 
=xx 
pathxx 
.xx 
Lengthxx !
;xx! "
Vector3yy 
[yy 
]yy 
path3Dyy 
=yy 
newyy "
Vector3yy# *
[yy* +
lenyy+ .
]yy. /
;yy/ 0
forzz 
(zz 
intzz 
izz 
=zz 
$numzz 
;zz 
izz 
<zz 
lenzz  #
;zz# $
++zz% '
izz' (
)zz( )
path3Dzz* 0
[zz0 1
izz1 2
]zz2 3
=zz4 5
pathzz6 :
[zz: ;
izz; <
]zz< =
;zz= >
TweenerCore{{ 
<{{ 
Vector3{{ 
,{{  
Path{{! %
,{{% &
PathOptions{{' 2
>{{2 3
t{{4 5
={{6 7
DOTween{{8 ?
.{{? @
To{{@ B
({{B C

PathPlugin{{C M
.{{M N
Get{{N Q
({{Q R
){{R S
,{{S T
({{U V
){{V W
=>{{X Z
target{{[ a
.{{a b
position{{b j
,{{j k
x{{l m
=>{{n p
target{{q w
.{{w x
MovePosition	{{x Ñ
(
{{Ñ Ö
x
{{Ö Ü
)
{{Ü á
,
{{á à
new
{{â å
Path
{{ç ë
(
{{ë í
pathType
{{í ö
,
{{ö õ
path3D
{{ú ¢
,
{{¢ £

resolution
{{§ Æ
,
{{Æ Ø

gizmoColor
{{∞ ∫
)
{{∫ ª
,
{{ª º
duration
{{Ω ≈
)
{{≈ ∆
.|| 
	SetTarget|| 
(|| 
target|| !
)||! "
.||" #
	SetUpdate||# ,
(||, -

UpdateType||- 7
.||7 8
Fixed||8 =
)||= >
;||> ?
t~~ 
.~~ 
plugOptions~~ 
.~~ 
isRigidbody~~ %
=~~& '
true~~( ,
;~~, -
t 
. 
plugOptions 
. 
mode 
=  
pathMode! )
;) *
return
ÄÄ 
t
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
éé 
static
éé 
TweenerCore
éé !
<
éé! "
Vector3
éé" )
,
éé) *
Path
éé+ /
,
éé/ 0
PathOptions
éé1 <
>
éé< =
DOLocalPath
éé> I
(
ééI J
this
èè 
Rigidbody2D
èè 
target
èè #
,
èè# $
Vector2
èè% ,
[
èè, -
]
èè- .
path
èè/ 3
,
èè3 4
float
èè5 :
duration
èè; C
,
èèC D
PathType
èèE M
pathType
èèN V
=
èèW X
PathType
èèY a
.
èèa b
Linear
èèb h
,
èèh i
PathMode
êê 
pathMode
êê 
=
êê 
PathMode
êê  (
.
êê( )
Full3D
êê) /
,
êê/ 0
int
êê1 4

resolution
êê5 ?
=
êê@ A
$num
êêB D
,
êêD E
Color
êêF K
?
êêK L

gizmoColor
êêM W
=
êêX Y
null
êêZ ^
)
ëë 	
{
íí 	
if
ìì 
(
ìì 

resolution
ìì 
<
ìì 
$num
ìì 
)
ìì 

resolution
ìì  *
=
ìì+ ,
$num
ìì- .
;
ìì. /
int
îî 
len
îî 
=
îî 
path
îî 
.
îî 
Length
îî !
;
îî! "
Vector3
ïï 
[
ïï 
]
ïï 
path3D
ïï 
=
ïï 
new
ïï "
Vector3
ïï# *
[
ïï* +
len
ïï+ .
]
ïï. /
;
ïï/ 0
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ 
<
ññ 
len
ññ  #
;
ññ# $
++
ññ% '
i
ññ' (
)
ññ( )
path3D
ññ* 0
[
ññ0 1
i
ññ1 2
]
ññ2 3
=
ññ4 5
path
ññ6 :
[
ññ: ;
i
ññ; <
]
ññ< =
;
ññ= >
	Transform
óó 
trans
óó 
=
óó 
target
óó $
.
óó$ %
	transform
óó% .
;
óó. /
TweenerCore
òò 
<
òò 
Vector3
òò 
,
òò  
Path
òò! %
,
òò% &
PathOptions
òò' 2
>
òò2 3
t
òò4 5
=
òò6 7
DOTween
òò8 ?
.
òò? @
To
òò@ B
(
òòB C

PathPlugin
òòC M
.
òòM N
Get
òòN Q
(
òòQ R
)
òòR S
,
òòS T
(
òòU V
)
òòV W
=>
òòX Z
trans
òò[ `
.
òò` a
localPosition
òòa n
,
òòn o
x
òòp q
=>
òòr t
target
òòu {
.
òò{ |
MovePositionòò| à
(òòà â
transòòâ é
.òòé è
parentòòè ï
==òòñ ò
nullòòô ù
?òòû ü
xòò† °
:òò¢ £
transòò§ ©
.òò© ™
parentòò™ ∞
.òò∞ ±
TransformPointòò± ø
(òòø ¿
xòò¿ ¡
)òò¡ ¬
)òò¬ √
,òò√ ƒ
newòò≈ »
Pathòò… Õ
(òòÕ Œ
pathTypeòòŒ ÷
,òò÷ ◊
path3Dòòÿ ﬁ
,òòﬁ ﬂ

resolutionòò‡ Í
,òòÍ Î

gizmoColoròòÏ ˆ
)òòˆ ˜
,òò˜ ¯
durationòò˘ Å
)òòÅ Ç
.
ôô 
	SetTarget
ôô 
(
ôô 
target
ôô !
)
ôô! "
.
ôô" #
	SetUpdate
ôô# ,
(
ôô, -

UpdateType
ôô- 7
.
ôô7 8
Fixed
ôô8 =
)
ôô= >
;
ôô> ?
t
õõ 
.
õõ 
plugOptions
õõ 
.
õõ 
isRigidbody
õõ %
=
õõ& '
true
õõ( ,
;
õõ, -
t
úú 
.
úú 
plugOptions
úú 
.
úú 
mode
úú 
=
úú  
pathMode
úú! )
;
úú) *
t
ùù 
.
ùù 
plugOptions
ùù 
.
ùù 
useLocalPosition
ùù *
=
ùù+ ,
true
ùù- 1
;
ùù1 2
return
ûû 
t
ûû 
;
ûû 
}
üü 	
}
¶¶ 
}ßß ≠7
âC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModuleSprite.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class 
DOTweenModuleSprite (
{ 
public 
static 
TweenerCore !
<! "
Color" '
,' (
Color) .
,. /
ColorOptions0 <
>< =
DOColor> E
(E F
thisF J
SpriteRendererK Y
targetZ `
,` a
Colorb g
endValueh p
,p q
floatr w
duration	x Ä
)
Ä Å
{ 	
TweenerCore 
< 
Color 
, 
Color $
,$ %
ColorOptions& 2
>2 3
t4 5
=6 7
DOTween8 ?
.? @
To@ B
(B C
(C D
)D E
=>F H
targetI O
.O P
colorP U
,U V
xW X
=>Y [
target\ b
.b c
colorc h
=i j
xk l
,l m
endValuen v
,v w
duration	x Ä
)
Ä Å
;
Å Ç
t 
. 
	SetTarget 
( 
target 
) 
;  
return 
t 
; 
} 	
public   
static   
TweenerCore   !
<  ! "
Color  " '
,  ' (
Color  ) .
,  . /
ColorOptions  0 <
>  < =
DOFade  > D
(  D E
this  E I
SpriteRenderer  J X
target  Y _
,  _ `
float  a f
endValue  g o
,  o p
float  q v
duration  w 
)	   Ä
{!! 	
TweenerCore"" 
<"" 
Color"" 
,"" 
Color"" $
,""$ %
ColorOptions""& 2
>""2 3
t""4 5
=""6 7
DOTween""8 ?
.""? @
ToAlpha""@ G
(""G H
(""H I
)""I J
=>""K M
target""N T
.""T U
color""U Z
,""Z [
x""\ ]
=>""^ `
target""a g
.""g h
color""h m
=""n o
x""p q
,""q r
endValue""s {
,""{ |
duration	""} Ö
)
""Ö Ü
;
""Ü á
t## 
.## 
	SetTarget## 
(## 
target## 
)## 
;##  
return$$ 
t$$ 
;$$ 
}%% 	
public++ 
static++ 
Sequence++ 
DOGradientColor++ .
(++. /
this++/ 3
SpriteRenderer++4 B
target++C I
,++I J
Gradient++K S
gradient++T \
,++\ ]
float++^ c
duration++d l
)++l m
{,, 	
Sequence-- 
s-- 
=-- 
DOTween--  
.--  !
Sequence--! )
(--) *
)--* +
;--+ ,
GradientColorKey.. 
[.. 
].. 
colors.. %
=..& '
gradient..( 0
...0 1
	colorKeys..1 :
;..: ;
int// 
len// 
=// 
colors// 
.// 
Length// #
;//# $
for00 
(00 
int00 
i00 
=00 
$num00 
;00 
i00 
<00 
len00  #
;00# $
++00% '
i00' (
)00( )
{00* +
GradientColorKey11  
c11! "
=11# $
colors11% +
[11+ ,
i11, -
]11- .
;11. /
if22 
(22 
i22 
==22 
$num22 
&&22 
c22 
.22  
time22  $
<=22% '
$num22( )
)22) *
{22+ ,
target33 
.33 
color33  
=33! "
c33# $
.33$ %
color33% *
;33* +
continue44 
;44 
}55 
float66 
colorDuration66 #
=66$ %
i66& '
==66( *
len66+ .
-66/ 0
$num661 2
?77 
duration77 
-77  
s77! "
.77" #
Duration77# +
(77+ ,
false77, 1
)771 2
:88 
duration88 
*88  
(88! "
i88" #
==88$ &
$num88' (
?88) *
c88+ ,
.88, -
time88- 1
:882 3
c884 5
.885 6
time886 :
-88; <
colors88= C
[88C D
i88D E
-88F G
$num88H I
]88I J
.88J K
time88K O
)88O P
;88P Q
s99 
.99 
Append99 
(99 
target99 
.99  
DOColor99  '
(99' (
c99( )
.99) *
color99* /
,99/ 0
colorDuration991 >
)99> ?
.99? @
SetEase99@ G
(99G H
Ease99H L
.99L M
Linear99M S
)99S T
)99T U
;99U V
}:: 
s;; 
.;; 
	SetTarget;; 
(;; 
target;; 
);; 
;;;  
return<< 
s<< 
;<< 
}== 	
publicJJ 
staticJJ 
TweenerJJ 
DOBlendableColorJJ .
(JJ. /
thisJJ/ 3
SpriteRendererJJ4 B
targetJJC I
,JJI J
ColorJJK P
endValueJJQ Y
,JJY Z
floatJJ[ `
durationJJa i
)JJi j
{KK 	
endValueLL 
=LL 
endValueLL 
-LL  !
targetLL" (
.LL( )
colorLL) .
;LL. /
ColorMM 
toMM 
=MM 
newMM 
ColorMM  
(MM  !
$numMM! "
,MM" #
$numMM$ %
,MM% &
$numMM' (
,MM( )
$numMM* +
)MM+ ,
;MM, -
returnNN 
DOTweenNN 
.NN 
ToNN 
(NN 
(NN 
)NN  
=>NN! #
toNN$ &
,NN& '
xNN( )
=>NN* ,
{NN- .
ColorOO 
diffOO 
=OO  
xOO! "
-OO# $
toOO% '
;OO' (
toPP 
=PP 
xPP 
;PP 
targetQQ 
.QQ 
colorQQ  
+=QQ! #
diffQQ$ (
;QQ( )
}RR 
,RR 
endValueRR 
,RR 
durationRR %
)RR% &
.SS 
	BlendableSS 
(SS 
)SS 
.SS 
	SetTargetSS &
(SS& '
targetSS' -
)SS- .
;SS. /
}TT 	
}[[ 
}\\ Å¡
ÖC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModuleUI.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class 
DOTweenModuleUI $
{ 
public 
static 
TweenerCore !
<! "
float" '
,' (
float) .
,. /
FloatOptions0 <
>< =
DOFade> D
(D E
thisE I
CanvasGroupJ U
targetV \
,\ ]
float^ c
endValued l
,l m
floatn s
durationt |
)| }
{ 	
TweenerCore 
< 
float 
, 
float $
,$ %
FloatOptions& 2
>2 3
t4 5
=6 7
DOTween8 ?
.? @
To@ B
(B C
(C D
)D E
=>F H
targetI O
.O P
alphaP U
,U V
xW X
=>Y [
target\ b
.b c
alphac h
=i j
xk l
,l m
endValuen v
,v w
duration	x Ä
)
Ä Å
;
Å Ç
t 
. 
	SetTarget 
( 
target 
) 
;  
return 
t 
; 
} 	
public(( 
static(( 
TweenerCore(( !
<((! "
Color((" '
,((' (
Color(() .
,((. /
ColorOptions((0 <
>((< =
DOColor((> E
(((E F
this((F J
Graphic((K R
target((S Y
,((Y Z
Color(([ `
endValue((a i
,((i j
float((k p
duration((q y
)((y z
{)) 	
TweenerCore** 
<** 
Color** 
,** 
Color** $
,**$ %
ColorOptions**& 2
>**2 3
t**4 5
=**6 7
DOTween**8 ?
.**? @
To**@ B
(**B C
(**C D
)**D E
=>**F H
target**I O
.**O P
color**P U
,**U V
x**W X
=>**Y [
target**\ b
.**b c
color**c h
=**i j
x**k l
,**l m
endValue**n v
,**v w
duration	**x Ä
)
**Ä Å
;
**Å Ç
t++ 
.++ 
	SetTarget++ 
(++ 
target++ 
)++ 
;++  
return,, 
t,, 
;,, 
}-- 	
public22 
static22 
TweenerCore22 !
<22! "
Color22" '
,22' (
Color22) .
,22. /
ColorOptions220 <
>22< =
DOFade22> D
(22D E
this22E I
Graphic22J Q
target22R X
,22X Y
float22Z _
endValue22` h
,22h i
float22j o
duration22p x
)22x y
{33 	
TweenerCore44 
<44 
Color44 
,44 
Color44 $
,44$ %
ColorOptions44& 2
>442 3
t444 5
=446 7
DOTween448 ?
.44? @
ToAlpha44@ G
(44G H
(44H I
)44I J
=>44K M
target44N T
.44T U
color44U Z
,44Z [
x44\ ]
=>44^ `
target44a g
.44g h
color44h m
=44n o
x44p q
,44q r
endValue44s {
,44{ |
duration	44} Ö
)
44Ö Ü
;
44Ü á
t55 
.55 
	SetTarget55 
(55 
target55 
)55 
;55  
return66 
t66 
;66 
}77 	
public@@ 
static@@ 
TweenerCore@@ !
<@@! "
Color@@" '
,@@' (
Color@@) .
,@@. /
ColorOptions@@0 <
>@@< =
DOColor@@> E
(@@E F
this@@F J
Image@@K P
target@@Q W
,@@W X
Color@@Y ^
endValue@@_ g
,@@g h
float@@i n
duration@@o w
)@@w x
{AA 	
TweenerCoreBB 
<BB 
ColorBB 
,BB 
ColorBB $
,BB$ %
ColorOptionsBB& 2
>BB2 3
tBB4 5
=BB6 7
DOTweenBB8 ?
.BB? @
ToBB@ B
(BBB C
(BBC D
)BBD E
=>BBF H
targetBBI O
.BBO P
colorBBP U
,BBU V
xBBW X
=>BBY [
targetBB\ b
.BBb c
colorBBc h
=BBi j
xBBk l
,BBl m
endValueBBn v
,BBv w
duration	BBx Ä
)
BBÄ Å
;
BBÅ Ç
tCC 
.CC 
	SetTargetCC 
(CC 
targetCC 
)CC 
;CC  
returnDD 
tDD 
;DD 
}EE 	
publicJJ 
staticJJ 
TweenerCoreJJ !
<JJ! "
ColorJJ" '
,JJ' (
ColorJJ) .
,JJ. /
ColorOptionsJJ0 <
>JJ< =
DOFadeJJ> D
(JJD E
thisJJE I
ImageJJJ O
targetJJP V
,JJV W
floatJJX ]
endValueJJ^ f
,JJf g
floatJJh m
durationJJn v
)JJv w
{KK 	
TweenerCoreLL 
<LL 
ColorLL 
,LL 
ColorLL $
,LL$ %
ColorOptionsLL& 2
>LL2 3
tLL4 5
=LL6 7
DOTweenLL8 ?
.LL? @
ToAlphaLL@ G
(LLG H
(LLH I
)LLI J
=>LLK M
targetLLN T
.LLT U
colorLLU Z
,LLZ [
xLL\ ]
=>LL^ `
targetLLa g
.LLg h
colorLLh m
=LLn o
xLLp q
,LLq r
endValueLLs {
,LL{ |
duration	LL} Ö
)
LLÖ Ü
;
LLÜ á
tMM 
.MM 
	SetTargetMM 
(MM 
targetMM 
)MM 
;MM  
returnNN 
tNN 
;NN 
}OO 	
publicTT 
staticTT 
TweenerCoreTT !
<TT! "
floatTT" '
,TT' (
floatTT) .
,TT. /
FloatOptionsTT0 <
>TT< =
DOFillAmountTT> J
(TTJ K
thisTTK O
ImageTTP U
targetTTV \
,TT\ ]
floatTT^ c
endValueTTd l
,TTl m
floatTTn s
durationTTt |
)TT| }
{UU 	
ifVV 
(VV 
endValueVV 
>VV 
$numVV 
)VV 
endValueVV &
=VV' (
$numVV) *
;VV* +
elseWW 
ifWW 
(WW 
endValueWW 
<WW 
$numWW  !
)WW! "
endValueWW# +
=WW, -
$numWW. /
;WW/ 0
TweenerCoreXX 
<XX 
floatXX 
,XX 
floatXX $
,XX$ %
FloatOptionsXX& 2
>XX2 3
tXX4 5
=XX6 7
DOTweenXX8 ?
.XX? @
ToXX@ B
(XXB C
(XXC D
)XXD E
=>XXF H
targetXXI O
.XXO P

fillAmountXXP Z
,XXZ [
xXX\ ]
=>XX^ `
targetXXa g
.XXg h

fillAmountXXh r
=XXs t
xXXu v
,XXv w
endValue	XXx Ä
,
XXÄ Å
duration
XXÇ ä
)
XXä ã
;
XXã å
tYY 
.YY 
	SetTargetYY 
(YY 
targetYY 
)YY 
;YY  
returnZZ 
tZZ 
;ZZ 
}[[ 	
publicaa 
staticaa 
Sequenceaa 
DOGradientColoraa .
(aa. /
thisaa/ 3
Imageaa4 9
targetaa: @
,aa@ A
GradientaaB J
gradientaaK S
,aaS T
floataaU Z
durationaa[ c
)aac d
{bb 	
Sequencecc 
scc 
=cc 
DOTweencc  
.cc  !
Sequencecc! )
(cc) *
)cc* +
;cc+ ,
GradientColorKeydd 
[dd 
]dd 
colorsdd %
=dd& '
gradientdd( 0
.dd0 1
	colorKeysdd1 :
;dd: ;
intee 
lenee 
=ee 
colorsee 
.ee 
Lengthee #
;ee# $
forff 
(ff 
intff 
iff 
=ff 
$numff 
;ff 
iff 
<ff 
lenff  #
;ff# $
++ff% '
iff' (
)ff( )
{ff* +
GradientColorKeygg  
cgg! "
=gg# $
colorsgg% +
[gg+ ,
igg, -
]gg- .
;gg. /
ifhh 
(hh 
ihh 
==hh 
$numhh 
&&hh 
chh 
.hh  
timehh  $
<=hh% '
$numhh( )
)hh) *
{hh+ ,
targetii 
.ii 
colorii  
=ii! "
cii# $
.ii$ %
colorii% *
;ii* +
continuejj 
;jj 
}kk 
floatll 
colorDurationll #
=ll$ %
ill& '
==ll( *
lenll+ .
-ll/ 0
$numll1 2
?mm 
durationmm 
-mm  
smm! "
.mm" #
Durationmm# +
(mm+ ,
falsemm, 1
)mm1 2
:nn 
durationnn 
*nn  
(nn! "
inn" #
==nn$ &
$numnn' (
?nn) *
cnn+ ,
.nn, -
timenn- 1
:nn2 3
cnn4 5
.nn5 6
timenn6 :
-nn; <
colorsnn= C
[nnC D
innD E
-nnF G
$numnnH I
]nnI J
.nnJ K
timennK O
)nnO P
;nnP Q
soo 
.oo 
Appendoo 
(oo 
targetoo 
.oo  
DOColoroo  '
(oo' (
coo( )
.oo) *
coloroo* /
,oo/ 0
colorDurationoo1 >
)oo> ?
.oo? @
SetEaseoo@ G
(ooG H
EaseooH L
.ooL M
LinearooM S
)ooS T
)ooT U
;ooU V
}pp 
sqq 
.qq 
	SetTargetqq 
(qq 
targetqq 
)qq 
;qq  
returnrr 
srr 
;rr 
}ss 	
public}} 
static}} 
TweenerCore}} !
<}}! "
Vector2}}" )
,}}) *
Vector2}}+ 2
,}}2 3
VectorOptions}}4 A
>}}A B
DOFlexibleSize}}C Q
(}}Q R
this}}R V
LayoutElement}}W d
target}}e k
,}}k l
Vector2}}m t
endValue}}u }
,}}} ~
float	}} Ñ
duration
}}Ö ç
,
}}ç é
bool
}}è ì
snapping
}}î ú
=
}}ù û
false
}}ü §
)
}}§ •
{~~ 	
TweenerCore 
< 
Vector2 
,  
Vector2! (
,( )
VectorOptions* 7
>7 8
t9 :
=; <
DOTween= D
.D E
ToE G
(G H
(H I
)I J
=>K M
newN Q
Vector2R Y
(Y Z
targetZ `
.` a
flexibleWidtha n
,n o
targetp v
.v w
flexibleHeight	w Ö
)
Ö Ü
,
Ü á
x
à â
=>
ä å
{
ç é
target
ÄÄ 
.
ÄÄ 
flexibleWidth
ÄÄ (
=
ÄÄ) *
x
ÄÄ+ ,
.
ÄÄ, -
x
ÄÄ- .
;
ÄÄ. /
target
ÅÅ 
.
ÅÅ 
flexibleHeight
ÅÅ )
=
ÅÅ* +
x
ÅÅ, -
.
ÅÅ- .
y
ÅÅ. /
;
ÅÅ/ 0
}
ÇÇ 
,
ÇÇ 
endValue
ÇÇ 
,
ÇÇ 
duration
ÇÇ %
)
ÇÇ% &
;
ÇÇ& '
t
ÉÉ 
.
ÉÉ 

SetOptions
ÉÉ 
(
ÉÉ 
snapping
ÉÉ !
)
ÉÉ! "
.
ÉÉ" #
	SetTarget
ÉÉ# ,
(
ÉÉ, -
target
ÉÉ- 3
)
ÉÉ3 4
;
ÉÉ4 5
return
ÑÑ 
t
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
ãã 
static
ãã 
TweenerCore
ãã !
<
ãã! "
Vector2
ãã" )
,
ãã) *
Vector2
ãã+ 2
,
ãã2 3
VectorOptions
ãã4 A
>
ããA B
	DOMinSize
ããC L
(
ããL M
this
ããM Q
LayoutElement
ããR _
target
ãã` f
,
ããf g
Vector2
ããh o
endValue
ããp x
,
ããx y
float
ããz 
durationããÄ à
,ããà â
boolããä é
snappingããè ó
=ããò ô
falseããö ü
)ããü †
{
åå 	
TweenerCore
çç 
<
çç 
Vector2
çç 
,
çç  
Vector2
çç! (
,
çç( )
VectorOptions
çç* 7
>
çç7 8
t
çç9 :
=
çç; <
DOTween
çç= D
.
ççD E
To
ççE G
(
ççG H
(
ççH I
)
ççI J
=>
ççK M
new
ççN Q
Vector2
ççR Y
(
ççY Z
target
ççZ `
.
çç` a
minWidth
çça i
,
ççi j
target
ççk q
.
ççq r
	minHeight
ççr {
)
çç{ |
,
çç| }
x
çç~ 
=>ççÄ Ç
{ççÉ Ñ
target
éé 
.
éé 
minWidth
éé 
=
éé  !
x
éé" #
.
éé# $
x
éé$ %
;
éé% &
target
èè 
.
èè 
	minHeight
èè  
=
èè! "
x
èè# $
.
èè$ %
y
èè% &
;
èè& '
}
êê 
,
êê 
endValue
êê 
,
êê 
duration
êê !
)
êê! "
;
êê" #
t
ëë 
.
ëë 

SetOptions
ëë 
(
ëë 
snapping
ëë !
)
ëë! "
.
ëë" #
	SetTarget
ëë# ,
(
ëë, -
target
ëë- 3
)
ëë3 4
;
ëë4 5
return
íí 
t
íí 
;
íí 
}
ìì 	
public
ôô 
static
ôô 
TweenerCore
ôô !
<
ôô! "
Vector2
ôô" )
,
ôô) *
Vector2
ôô+ 2
,
ôô2 3
VectorOptions
ôô4 A
>
ôôA B
DOPreferredSize
ôôC R
(
ôôR S
this
ôôS W
LayoutElement
ôôX e
target
ôôf l
,
ôôl m
Vector2
ôôn u
endValue
ôôv ~
,
ôô~ 
floatôôÄ Ö
durationôôÜ é
,ôôé è
boolôôê î
snappingôôï ù
=ôôû ü
falseôô† •
)ôô• ¶
{
öö 	
TweenerCore
õõ 
<
õõ 
Vector2
õõ 
,
õõ  
Vector2
õõ! (
,
õõ( )
VectorOptions
õõ* 7
>
õõ7 8
t
õõ9 :
=
õõ; <
DOTween
õõ= D
.
õõD E
To
õõE G
(
õõG H
(
õõH I
)
õõI J
=>
õõK M
new
õõN Q
Vector2
õõR Y
(
õõY Z
target
õõZ `
.
õõ` a
preferredWidth
õõa o
,
õõo p
target
õõq w
.
õõw x
preferredHeightõõx á
)õõá à
,õõà â
xõõä ã
=>õõå é
{õõè ê
target
úú 
.
úú 
preferredWidth
úú %
=
úú& '
x
úú( )
.
úú) *
x
úú* +
;
úú+ ,
target
ùù 
.
ùù 
preferredHeight
ùù &
=
ùù' (
x
ùù) *
.
ùù* +
y
ùù+ ,
;
ùù, -
}
ûû 
,
ûû 
endValue
ûû 
,
ûû 
duration
ûû !
)
ûû! "
;
ûû" #
t
üü 
.
üü 

SetOptions
üü 
(
üü 
snapping
üü !
)
üü! "
.
üü" #
	SetTarget
üü# ,
(
üü, -
target
üü- 3
)
üü3 4
;
üü4 5
return
†† 
t
†† 
;
†† 
}
°° 	
public
™™ 
static
™™ 
TweenerCore
™™ !
<
™™! "
Color
™™" '
,
™™' (
Color
™™) .
,
™™. /
ColorOptions
™™0 <
>
™™< =
DOColor
™™> E
(
™™E F
this
™™F J
Outline
™™K R
target
™™S Y
,
™™Y Z
Color
™™[ `
endValue
™™a i
,
™™i j
float
™™k p
duration
™™q y
)
™™y z
{
´´ 	
TweenerCore
¨¨ 
<
¨¨ 
Color
¨¨ 
,
¨¨ 
Color
¨¨ $
,
¨¨$ %
ColorOptions
¨¨& 2
>
¨¨2 3
t
¨¨4 5
=
¨¨6 7
DOTween
¨¨8 ?
.
¨¨? @
To
¨¨@ B
(
¨¨B C
(
¨¨C D
)
¨¨D E
=>
¨¨F H
target
¨¨I O
.
¨¨O P
effectColor
¨¨P [
,
¨¨[ \
x
¨¨] ^
=>
¨¨_ a
target
¨¨b h
.
¨¨h i
effectColor
¨¨i t
=
¨¨u v
x
¨¨w x
,
¨¨x y
endValue¨¨z Ç
,¨¨Ç É
duration¨¨Ñ å
)¨¨å ç
;¨¨ç é
t
≠≠ 
.
≠≠ 
	SetTarget
≠≠ 
(
≠≠ 
target
≠≠ 
)
≠≠ 
;
≠≠  
return
ÆÆ 
t
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
¥¥ 
static
¥¥ 
TweenerCore
¥¥ !
<
¥¥! "
Color
¥¥" '
,
¥¥' (
Color
¥¥) .
,
¥¥. /
ColorOptions
¥¥0 <
>
¥¥< =
DOFade
¥¥> D
(
¥¥D E
this
¥¥E I
Outline
¥¥J Q
target
¥¥R X
,
¥¥X Y
float
¥¥Z _
endValue
¥¥` h
,
¥¥h i
float
¥¥j o
duration
¥¥p x
)
¥¥x y
{
µµ 	
TweenerCore
∂∂ 
<
∂∂ 
Color
∂∂ 
,
∂∂ 
Color
∂∂ $
,
∂∂$ %
ColorOptions
∂∂& 2
>
∂∂2 3
t
∂∂4 5
=
∂∂6 7
DOTween
∂∂8 ?
.
∂∂? @
ToAlpha
∂∂@ G
(
∂∂G H
(
∂∂H I
)
∂∂I J
=>
∂∂K M
target
∂∂N T
.
∂∂T U
effectColor
∂∂U `
,
∂∂` a
x
∂∂b c
=>
∂∂d f
target
∂∂g m
.
∂∂m n
effectColor
∂∂n y
=
∂∂z {
x
∂∂| }
,
∂∂} ~
endValue∂∂ á
,∂∂á à
duration∂∂â ë
)∂∂ë í
;∂∂í ì
t
∑∑ 
.
∑∑ 
	SetTarget
∑∑ 
(
∑∑ 
target
∑∑ 
)
∑∑ 
;
∑∑  
return
∏∏ 
t
∏∏ 
;
∏∏ 
}
ππ 	
public
ææ 
static
ææ 
TweenerCore
ææ !
<
ææ! "
Vector2
ææ" )
,
ææ) *
Vector2
ææ+ 2
,
ææ2 3
VectorOptions
ææ4 A
>
ææA B
DOScale
ææC J
(
ææJ K
this
ææK O
Outline
ææP W
target
ææX ^
,
ææ^ _
Vector2
ææ` g
endValue
ææh p
,
ææp q
float
æær w
durationææx Ä
)ææÄ Å
{
øø 	
TweenerCore
¿¿ 
<
¿¿ 
Vector2
¿¿ 
,
¿¿  
Vector2
¿¿! (
,
¿¿( )
VectorOptions
¿¿* 7
>
¿¿7 8
t
¿¿9 :
=
¿¿; <
DOTween
¿¿= D
.
¿¿D E
To
¿¿E G
(
¿¿G H
(
¿¿H I
)
¿¿I J
=>
¿¿K M
target
¿¿N T
.
¿¿T U
effectDistance
¿¿U c
,
¿¿c d
x
¿¿e f
=>
¿¿g i
target
¿¿j p
.
¿¿p q
effectDistance
¿¿q 
=¿¿Ä Å
x¿¿Ç É
,¿¿É Ñ
endValue¿¿Ö ç
,¿¿ç é
duration¿¿è ó
)¿¿ó ò
;¿¿ò ô
t
¡¡ 
.
¡¡ 
	SetTarget
¡¡ 
(
¡¡ 
target
¡¡ 
)
¡¡ 
;
¡¡  
return
¬¬ 
t
¬¬ 
;
¬¬ 
}
√√ 	
public
ÕÕ 
static
ÕÕ 
TweenerCore
ÕÕ !
<
ÕÕ! "
Vector2
ÕÕ" )
,
ÕÕ) *
Vector2
ÕÕ+ 2
,
ÕÕ2 3
VectorOptions
ÕÕ4 A
>
ÕÕA B
DOAnchorPos
ÕÕC N
(
ÕÕN O
this
ÕÕO S
RectTransform
ÕÕT a
target
ÕÕb h
,
ÕÕh i
Vector2
ÕÕj q
endValue
ÕÕr z
,
ÕÕz {
floatÕÕ| Å
durationÕÕÇ ä
,ÕÕä ã
boolÕÕå ê
snappingÕÕë ô
=ÕÕö õ
falseÕÕú °
)ÕÕ° ¢
{
ŒŒ 	
TweenerCore
œœ 
<
œœ 
Vector2
œœ 
,
œœ  
Vector2
œœ! (
,
œœ( )
VectorOptions
œœ* 7
>
œœ7 8
t
œœ9 :
=
œœ; <
DOTween
œœ= D
.
œœD E
To
œœE G
(
œœG H
(
œœH I
)
œœI J
=>
œœK M
target
œœN T
.
œœT U
anchoredPosition
œœU e
,
œœe f
x
œœg h
=>
œœi k
target
œœl r
.
œœr s
anchoredPositionœœs É
=œœÑ Ö
xœœÜ á
,œœá à
endValueœœâ ë
,œœë í
durationœœì õ
)œœõ ú
;œœú ù
t
–– 
.
–– 

SetOptions
–– 
(
–– 
snapping
–– !
)
––! "
.
––" #
	SetTarget
––# ,
(
––, -
target
––- 3
)
––3 4
;
––4 5
return
—— 
t
—— 
;
—— 
}
““ 	
public
◊◊ 
static
◊◊ 
TweenerCore
◊◊ !
<
◊◊! "
Vector2
◊◊" )
,
◊◊) *
Vector2
◊◊+ 2
,
◊◊2 3
VectorOptions
◊◊4 A
>
◊◊A B
DOAnchorPosX
◊◊C O
(
◊◊O P
this
◊◊P T
RectTransform
◊◊U b
target
◊◊c i
,
◊◊i j
float
◊◊k p
endValue
◊◊q y
,
◊◊y z
float◊◊{ Ä
duration◊◊Å â
,◊◊â ä
bool◊◊ã è
snapping◊◊ê ò
=◊◊ô ö
false◊◊õ †
)◊◊† °
{
ÿÿ 	
TweenerCore
ŸŸ 
<
ŸŸ 
Vector2
ŸŸ 
,
ŸŸ  
Vector2
ŸŸ! (
,
ŸŸ( )
VectorOptions
ŸŸ* 7
>
ŸŸ7 8
t
ŸŸ9 :
=
ŸŸ; <
DOTween
ŸŸ= D
.
ŸŸD E
To
ŸŸE G
(
ŸŸG H
(
ŸŸH I
)
ŸŸI J
=>
ŸŸK M
target
ŸŸN T
.
ŸŸT U
anchoredPosition
ŸŸU e
,
ŸŸe f
x
ŸŸg h
=>
ŸŸi k
target
ŸŸl r
.
ŸŸr s
anchoredPositionŸŸs É
=ŸŸÑ Ö
xŸŸÜ á
,ŸŸá à
newŸŸâ å
Vector2ŸŸç î
(ŸŸî ï
endValueŸŸï ù
,ŸŸù û
$numŸŸü †
)ŸŸ† °
,ŸŸ° ¢
durationŸŸ£ ´
)ŸŸ´ ¨
;ŸŸ¨ ≠
t
⁄⁄ 
.
⁄⁄ 

SetOptions
⁄⁄ 
(
⁄⁄ 
AxisConstraint
⁄⁄ '
.
⁄⁄' (
X
⁄⁄( )
,
⁄⁄) *
snapping
⁄⁄+ 3
)
⁄⁄3 4
.
⁄⁄4 5
	SetTarget
⁄⁄5 >
(
⁄⁄> ?
target
⁄⁄? E
)
⁄⁄E F
;
⁄⁄F G
return
€€ 
t
€€ 
;
€€ 
}
‹‹ 	
public
·· 
static
·· 
TweenerCore
·· !
<
··! "
Vector2
··" )
,
··) *
Vector2
··+ 2
,
··2 3
VectorOptions
··4 A
>
··A B
DOAnchorPosY
··C O
(
··O P
this
··P T
RectTransform
··U b
target
··c i
,
··i j
float
··k p
endValue
··q y
,
··y z
float··{ Ä
duration··Å â
,··â ä
bool··ã è
snapping··ê ò
=··ô ö
false··õ †
)··† °
{
‚‚ 	
TweenerCore
„„ 
<
„„ 
Vector2
„„ 
,
„„  
Vector2
„„! (
,
„„( )
VectorOptions
„„* 7
>
„„7 8
t
„„9 :
=
„„; <
DOTween
„„= D
.
„„D E
To
„„E G
(
„„G H
(
„„H I
)
„„I J
=>
„„K M
target
„„N T
.
„„T U
anchoredPosition
„„U e
,
„„e f
x
„„g h
=>
„„i k
target
„„l r
.
„„r s
anchoredPosition„„s É
=„„Ñ Ö
x„„Ü á
,„„á à
new„„â å
Vector2„„ç î
(„„î ï
$num„„ï ñ
,„„ñ ó
endValue„„ò †
)„„† °
,„„° ¢
duration„„£ ´
)„„´ ¨
;„„¨ ≠
t
‰‰ 
.
‰‰ 

SetOptions
‰‰ 
(
‰‰ 
AxisConstraint
‰‰ '
.
‰‰' (
Y
‰‰( )
,
‰‰) *
snapping
‰‰+ 3
)
‰‰3 4
.
‰‰4 5
	SetTarget
‰‰5 >
(
‰‰> ?
target
‰‰? E
)
‰‰E F
;
‰‰F G
return
ÂÂ 
t
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ÏÏ 
static
ÏÏ 
TweenerCore
ÏÏ !
<
ÏÏ! "
Vector3
ÏÏ" )
,
ÏÏ) *
Vector3
ÏÏ+ 2
,
ÏÏ2 3
VectorOptions
ÏÏ4 A
>
ÏÏA B
DOAnchorPos3D
ÏÏC P
(
ÏÏP Q
this
ÏÏQ U
RectTransform
ÏÏV c
target
ÏÏd j
,
ÏÏj k
Vector3
ÏÏl s
endValue
ÏÏt |
,
ÏÏ| }
floatÏÏ~ É
durationÏÏÑ å
,ÏÏå ç
boolÏÏé í
snappingÏÏì õ
=ÏÏú ù
falseÏÏû £
)ÏÏ£ §
{
ÌÌ 	
TweenerCore
ÓÓ 
<
ÓÓ 
Vector3
ÓÓ 
,
ÓÓ  
Vector3
ÓÓ! (
,
ÓÓ( )
VectorOptions
ÓÓ* 7
>
ÓÓ7 8
t
ÓÓ9 :
=
ÓÓ; <
DOTween
ÓÓ= D
.
ÓÓD E
To
ÓÓE G
(
ÓÓG H
(
ÓÓH I
)
ÓÓI J
=>
ÓÓK M
target
ÓÓN T
.
ÓÓT U 
anchoredPosition3D
ÓÓU g
,
ÓÓg h
x
ÓÓi j
=>
ÓÓk m
target
ÓÓn t
.
ÓÓt u!
anchoredPosition3DÓÓu á
=ÓÓà â
xÓÓä ã
,ÓÓã å
endValueÓÓç ï
,ÓÓï ñ
durationÓÓó ü
)ÓÓü †
;ÓÓ† °
t
ÔÔ 
.
ÔÔ 

SetOptions
ÔÔ 
(
ÔÔ 
snapping
ÔÔ !
)
ÔÔ! "
.
ÔÔ" #
	SetTarget
ÔÔ# ,
(
ÔÔ, -
target
ÔÔ- 3
)
ÔÔ3 4
;
ÔÔ4 5
return
 
t
 
;
 
}
ÒÒ 	
public
ˆˆ 
static
ˆˆ 
TweenerCore
ˆˆ !
<
ˆˆ! "
Vector3
ˆˆ" )
,
ˆˆ) *
Vector3
ˆˆ+ 2
,
ˆˆ2 3
VectorOptions
ˆˆ4 A
>
ˆˆA B
DOAnchorPos3DX
ˆˆC Q
(
ˆˆQ R
this
ˆˆR V
RectTransform
ˆˆW d
target
ˆˆe k
,
ˆˆk l
float
ˆˆm r
endValue
ˆˆs {
,
ˆˆ{ |
floatˆˆ} Ç
durationˆˆÉ ã
,ˆˆã å
boolˆˆç ë
snappingˆˆí ö
=ˆˆõ ú
falseˆˆù ¢
)ˆˆ¢ £
{
˜˜ 	
TweenerCore
¯¯ 
<
¯¯ 
Vector3
¯¯ 
,
¯¯  
Vector3
¯¯! (
,
¯¯( )
VectorOptions
¯¯* 7
>
¯¯7 8
t
¯¯9 :
=
¯¯; <
DOTween
¯¯= D
.
¯¯D E
To
¯¯E G
(
¯¯G H
(
¯¯H I
)
¯¯I J
=>
¯¯K M
target
¯¯N T
.
¯¯T U 
anchoredPosition3D
¯¯U g
,
¯¯g h
x
¯¯i j
=>
¯¯k m
target
¯¯n t
.
¯¯t u!
anchoredPosition3D¯¯u á
=¯¯à â
x¯¯ä ã
,¯¯ã å
new¯¯ç ê
Vector3¯¯ë ò
(¯¯ò ô
endValue¯¯ô °
,¯¯° ¢
$num¯¯£ §
,¯¯§ •
$num¯¯¶ ß
)¯¯ß ®
,¯¯® ©
duration¯¯™ ≤
)¯¯≤ ≥
;¯¯≥ ¥
t
˘˘ 
.
˘˘ 

SetOptions
˘˘ 
(
˘˘ 
AxisConstraint
˘˘ '
.
˘˘' (
X
˘˘( )
,
˘˘) *
snapping
˘˘+ 3
)
˘˘3 4
.
˘˘4 5
	SetTarget
˘˘5 >
(
˘˘> ?
target
˘˘? E
)
˘˘E F
;
˘˘F G
return
˙˙ 
t
˙˙ 
;
˙˙ 
}
˚˚ 	
public
ÄÄ 
static
ÄÄ 
TweenerCore
ÄÄ !
<
ÄÄ! "
Vector3
ÄÄ" )
,
ÄÄ) *
Vector3
ÄÄ+ 2
,
ÄÄ2 3
VectorOptions
ÄÄ4 A
>
ÄÄA B
DOAnchorPos3DY
ÄÄC Q
(
ÄÄQ R
this
ÄÄR V
RectTransform
ÄÄW d
target
ÄÄe k
,
ÄÄk l
float
ÄÄm r
endValue
ÄÄs {
,
ÄÄ{ |
floatÄÄ} Ç
durationÄÄÉ ã
,ÄÄã å
boolÄÄç ë
snappingÄÄí ö
=ÄÄõ ú
falseÄÄù ¢
)ÄÄ¢ £
{
ÅÅ 	
TweenerCore
ÇÇ 
<
ÇÇ 
Vector3
ÇÇ 
,
ÇÇ  
Vector3
ÇÇ! (
,
ÇÇ( )
VectorOptions
ÇÇ* 7
>
ÇÇ7 8
t
ÇÇ9 :
=
ÇÇ; <
DOTween
ÇÇ= D
.
ÇÇD E
To
ÇÇE G
(
ÇÇG H
(
ÇÇH I
)
ÇÇI J
=>
ÇÇK M
target
ÇÇN T
.
ÇÇT U 
anchoredPosition3D
ÇÇU g
,
ÇÇg h
x
ÇÇi j
=>
ÇÇk m
target
ÇÇn t
.
ÇÇt u!
anchoredPosition3DÇÇu á
=ÇÇà â
xÇÇä ã
,ÇÇã å
newÇÇç ê
Vector3ÇÇë ò
(ÇÇò ô
$numÇÇô ö
,ÇÇö õ
endValueÇÇú §
,ÇÇ§ •
$numÇÇ¶ ß
)ÇÇß ®
,ÇÇ® ©
durationÇÇ™ ≤
)ÇÇ≤ ≥
;ÇÇ≥ ¥
t
ÉÉ 
.
ÉÉ 

SetOptions
ÉÉ 
(
ÉÉ 
AxisConstraint
ÉÉ '
.
ÉÉ' (
Y
ÉÉ( )
,
ÉÉ) *
snapping
ÉÉ+ 3
)
ÉÉ3 4
.
ÉÉ4 5
	SetTarget
ÉÉ5 >
(
ÉÉ> ?
target
ÉÉ? E
)
ÉÉE F
;
ÉÉF G
return
ÑÑ 
t
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
ää 
static
ää 
TweenerCore
ää !
<
ää! "
Vector3
ää" )
,
ää) *
Vector3
ää+ 2
,
ää2 3
VectorOptions
ää4 A
>
ääA B
DOAnchorPos3DZ
ääC Q
(
ääQ R
this
ääR V
RectTransform
ääW d
target
ääe k
,
ääk l
float
ääm r
endValue
ääs {
,
ää{ |
floatää} Ç
durationääÉ ã
,ääã å
boolääç ë
snappingääí ö
=ääõ ú
falseääù ¢
)ää¢ £
{
ãã 	
TweenerCore
åå 
<
åå 
Vector3
åå 
,
åå  
Vector3
åå! (
,
åå( )
VectorOptions
åå* 7
>
åå7 8
t
åå9 :
=
åå; <
DOTween
åå= D
.
ååD E
To
ååE G
(
ååG H
(
ååH I
)
ååI J
=>
ååK M
target
ååN T
.
ååT U 
anchoredPosition3D
ååU g
,
ååg h
x
ååi j
=>
ååk m
target
åån t
.
ååt u!
anchoredPosition3Dååu á
=ååà â
xååä ã
,ååã å
newååç ê
Vector3ååë ò
(ååò ô
$numååô ö
,ååö õ
$numååú ù
,ååù û
endValueååü ß
)ååß ®
,åå® ©
durationåå™ ≤
)åå≤ ≥
;åå≥ ¥
t
çç 
.
çç 

SetOptions
çç 
(
çç 
AxisConstraint
çç '
.
çç' (
Z
çç( )
,
çç) *
snapping
çç+ 3
)
çç3 4
.
çç4 5
	SetTarget
çç5 >
(
çç> ?
target
çç? E
)
ççE F
;
ççF G
return
éé 
t
éé 
;
éé 
}
èè 	
public
ïï 
static
ïï 
TweenerCore
ïï !
<
ïï! "
Vector2
ïï" )
,
ïï) *
Vector2
ïï+ 2
,
ïï2 3
VectorOptions
ïï4 A
>
ïïA B
DOAnchorMax
ïïC N
(
ïïN O
this
ïïO S
RectTransform
ïïT a
target
ïïb h
,
ïïh i
Vector2
ïïj q
endValue
ïïr z
,
ïïz {
floatïï| Å
durationïïÇ ä
,ïïä ã
boolïïå ê
snappingïïë ô
=ïïö õ
falseïïú °
)ïï° ¢
{
ññ 	
TweenerCore
óó 
<
óó 
Vector2
óó 
,
óó  
Vector2
óó! (
,
óó( )
VectorOptions
óó* 7
>
óó7 8
t
óó9 :
=
óó; <
DOTween
óó= D
.
óóD E
To
óóE G
(
óóG H
(
óóH I
)
óóI J
=>
óóK M
target
óóN T
.
óóT U
	anchorMax
óóU ^
,
óó^ _
x
óó` a
=>
óób d
target
óóe k
.
óók l
	anchorMax
óól u
=
óóv w
x
óóx y
,
óóy z
endValueóó{ É
,óóÉ Ñ
durationóóÖ ç
)óóç é
;óóé è
t
òò 
.
òò 

SetOptions
òò 
(
òò 
snapping
òò !
)
òò! "
.
òò" #
	SetTarget
òò# ,
(
òò, -
target
òò- 3
)
òò3 4
;
òò4 5
return
ôô 
t
ôô 
;
ôô 
}
öö 	
public
†† 
static
†† 
TweenerCore
†† !
<
††! "
Vector2
††" )
,
††) *
Vector2
††+ 2
,
††2 3
VectorOptions
††4 A
>
††A B
DOAnchorMin
††C N
(
††N O
this
††O S
RectTransform
††T a
target
††b h
,
††h i
Vector2
††j q
endValue
††r z
,
††z {
float††| Å
duration††Ç ä
,††ä ã
bool††å ê
snapping††ë ô
=††ö õ
false††ú °
)††° ¢
{
°° 	
TweenerCore
¢¢ 
<
¢¢ 
Vector2
¢¢ 
,
¢¢  
Vector2
¢¢! (
,
¢¢( )
VectorOptions
¢¢* 7
>
¢¢7 8
t
¢¢9 :
=
¢¢; <
DOTween
¢¢= D
.
¢¢D E
To
¢¢E G
(
¢¢G H
(
¢¢H I
)
¢¢I J
=>
¢¢K M
target
¢¢N T
.
¢¢T U
	anchorMin
¢¢U ^
,
¢¢^ _
x
¢¢` a
=>
¢¢b d
target
¢¢e k
.
¢¢k l
	anchorMin
¢¢l u
=
¢¢v w
x
¢¢x y
,
¢¢y z
endValue¢¢{ É
,¢¢É Ñ
duration¢¢Ö ç
)¢¢ç é
;¢¢é è
t
££ 
.
££ 

SetOptions
££ 
(
££ 
snapping
££ !
)
££! "
.
££" #
	SetTarget
££# ,
(
££, -
target
££- 3
)
££3 4
;
££4 5
return
§§ 
t
§§ 
;
§§ 
}
•• 	
public
™™ 
static
™™ 
TweenerCore
™™ !
<
™™! "
Vector2
™™" )
,
™™) *
Vector2
™™+ 2
,
™™2 3
VectorOptions
™™4 A
>
™™A B
DOPivot
™™C J
(
™™J K
this
™™K O
RectTransform
™™P ]
target
™™^ d
,
™™d e
Vector2
™™f m
endValue
™™n v
,
™™v w
float
™™x }
duration™™~ Ü
)™™Ü á
{
´´ 	
TweenerCore
¨¨ 
<
¨¨ 
Vector2
¨¨ 
,
¨¨  
Vector2
¨¨! (
,
¨¨( )
VectorOptions
¨¨* 7
>
¨¨7 8
t
¨¨9 :
=
¨¨; <
DOTween
¨¨= D
.
¨¨D E
To
¨¨E G
(
¨¨G H
(
¨¨H I
)
¨¨I J
=>
¨¨K M
target
¨¨N T
.
¨¨T U
pivot
¨¨U Z
,
¨¨Z [
x
¨¨\ ]
=>
¨¨^ `
target
¨¨a g
.
¨¨g h
pivot
¨¨h m
=
¨¨n o
x
¨¨p q
,
¨¨q r
endValue
¨¨s {
,
¨¨{ |
duration¨¨} Ö
)¨¨Ö Ü
;¨¨Ü á
t
≠≠ 
.
≠≠ 
	SetTarget
≠≠ 
(
≠≠ 
target
≠≠ 
)
≠≠ 
;
≠≠  
return
ÆÆ 
t
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
≥≥ 
static
≥≥ 
TweenerCore
≥≥ !
<
≥≥! "
Vector2
≥≥" )
,
≥≥) *
Vector2
≥≥+ 2
,
≥≥2 3
VectorOptions
≥≥4 A
>
≥≥A B
DOPivotX
≥≥C K
(
≥≥K L
this
≥≥L P
RectTransform
≥≥Q ^
target
≥≥_ e
,
≥≥e f
float
≥≥g l
endValue
≥≥m u
,
≥≥u v
float
≥≥w |
duration≥≥} Ö
)≥≥Ö Ü
{
¥¥ 	
TweenerCore
µµ 
<
µµ 
Vector2
µµ 
,
µµ  
Vector2
µµ! (
,
µµ( )
VectorOptions
µµ* 7
>
µµ7 8
t
µµ9 :
=
µµ; <
DOTween
µµ= D
.
µµD E
To
µµE G
(
µµG H
(
µµH I
)
µµI J
=>
µµK M
target
µµN T
.
µµT U
pivot
µµU Z
,
µµZ [
x
µµ\ ]
=>
µµ^ `
target
µµa g
.
µµg h
pivot
µµh m
=
µµn o
x
µµp q
,
µµq r
new
µµs v
Vector2
µµw ~
(
µµ~ 
endValueµµ á
,µµá à
$numµµâ ä
)µµä ã
,µµã å
durationµµç ï
)µµï ñ
;µµñ ó
t
∂∂ 
.
∂∂ 

SetOptions
∂∂ 
(
∂∂ 
AxisConstraint
∂∂ '
.
∂∂' (
X
∂∂( )
)
∂∂) *
.
∂∂* +
	SetTarget
∂∂+ 4
(
∂∂4 5
target
∂∂5 ;
)
∂∂; <
;
∂∂< =
return
∑∑ 
t
∑∑ 
;
∑∑ 
}
∏∏ 	
public
ºº 
static
ºº 
TweenerCore
ºº !
<
ºº! "
Vector2
ºº" )
,
ºº) *
Vector2
ºº+ 2
,
ºº2 3
VectorOptions
ºº4 A
>
ººA B
DOPivotY
ººC K
(
ººK L
this
ººL P
RectTransform
ººQ ^
target
ºº_ e
,
ººe f
float
ººg l
endValue
ººm u
,
ººu v
float
ººw |
durationºº} Ö
)ººÖ Ü
{
ΩΩ 	
TweenerCore
ææ 
<
ææ 
Vector2
ææ 
,
ææ  
Vector2
ææ! (
,
ææ( )
VectorOptions
ææ* 7
>
ææ7 8
t
ææ9 :
=
ææ; <
DOTween
ææ= D
.
ææD E
To
ææE G
(
ææG H
(
ææH I
)
ææI J
=>
ææK M
target
ææN T
.
ææT U
pivot
ææU Z
,
ææZ [
x
ææ\ ]
=>
ææ^ `
target
ææa g
.
ææg h
pivot
ææh m
=
ææn o
x
ææp q
,
ææq r
new
ææs v
Vector2
ææw ~
(
ææ~ 
$numææ Ä
,ææÄ Å
endValueææÇ ä
)ææä ã
,ææã å
durationææç ï
)ææï ñ
;ææñ ó
t
øø 
.
øø 

SetOptions
øø 
(
øø 
AxisConstraint
øø '
.
øø' (
Y
øø( )
)
øø) *
.
øø* +
	SetTarget
øø+ 4
(
øø4 5
target
øø5 ;
)
øø; <
;
øø< =
return
¿¿ 
t
¿¿ 
;
¿¿ 
}
¡¡ 	
public
«« 
static
«« 
TweenerCore
«« !
<
««! "
Vector2
««" )
,
««) *
Vector2
««+ 2
,
««2 3
VectorOptions
««4 A
>
««A B
DOSizeDelta
««C N
(
««N O
this
««O S
RectTransform
««T a
target
««b h
,
««h i
Vector2
««j q
endValue
««r z
,
««z {
float««| Å
duration««Ç ä
,««ä ã
bool««å ê
snapping««ë ô
=««ö õ
false««ú °
)««° ¢
{
»» 	
TweenerCore
…… 
<
…… 
Vector2
…… 
,
……  
Vector2
……! (
,
……( )
VectorOptions
……* 7
>
……7 8
t
……9 :
=
……; <
DOTween
……= D
.
……D E
To
……E G
(
……G H
(
……H I
)
……I J
=>
……K M
target
……N T
.
……T U
	sizeDelta
……U ^
,
……^ _
x
……` a
=>
……b d
target
……e k
.
……k l
	sizeDelta
……l u
=
……v w
x
……x y
,
……y z
endValue……{ É
,……É Ñ
duration……Ö ç
)……ç é
;……é è
t
   
.
   

SetOptions
   
(
   
snapping
   !
)
  ! "
.
  " #
	SetTarget
  # ,
(
  , -
target
  - 3
)
  3 4
;
  4 5
return
ÀÀ 
t
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ÿÿ 
static
ÿÿ 
Tweener
ÿÿ 
DOPunchAnchorPos
ÿÿ .
(
ÿÿ. /
this
ÿÿ/ 3
RectTransform
ÿÿ4 A
target
ÿÿB H
,
ÿÿH I
Vector2
ÿÿJ Q
punch
ÿÿR W
,
ÿÿW X
float
ÿÿY ^
duration
ÿÿ_ g
,
ÿÿg h
int
ÿÿi l
vibrato
ÿÿm t
=
ÿÿu v
$num
ÿÿw y
,
ÿÿy z
floatÿÿ{ Ä

elasticityÿÿÅ ã
=ÿÿå ç
$numÿÿé è
,ÿÿè ê
boolÿÿë ï
snappingÿÿñ û
=ÿÿü †
falseÿÿ° ¶
)ÿÿ¶ ß
{
ŸŸ 	
return
⁄⁄ 
DOTween
⁄⁄ 
.
⁄⁄ 
Punch
⁄⁄  
(
⁄⁄  !
(
⁄⁄! "
)
⁄⁄" #
=>
⁄⁄$ &
target
⁄⁄' -
.
⁄⁄- .
anchoredPosition
⁄⁄. >
,
⁄⁄> ?
x
⁄⁄@ A
=>
⁄⁄B D
target
⁄⁄E K
.
⁄⁄K L
anchoredPosition
⁄⁄L \
=
⁄⁄] ^
x
⁄⁄_ `
,
⁄⁄` a
punch
⁄⁄b g
,
⁄⁄g h
duration
⁄⁄i q
,
⁄⁄q r
vibrato
⁄⁄s z
,
⁄⁄z {

elasticity⁄⁄| Ü
)⁄⁄Ü á
.
€€ 
	SetTarget
€€ 
(
€€ 
target
€€ !
)
€€! "
.
€€" #

SetOptions
€€# -
(
€€- .
snapping
€€. 6
)
€€6 7
;
€€7 8
}
‹‹ 	
public
ÁÁ 
static
ÁÁ 
Tweener
ÁÁ 
DOShakeAnchorPos
ÁÁ .
(
ÁÁ. /
this
ÁÁ/ 3
RectTransform
ÁÁ4 A
target
ÁÁB H
,
ÁÁH I
float
ÁÁJ O
duration
ÁÁP X
,
ÁÁX Y
float
ÁÁZ _
strength
ÁÁ` h
=
ÁÁi j
$num
ÁÁk n
,
ÁÁn o
int
ÁÁp s
vibrato
ÁÁt {
=
ÁÁ| }
$numÁÁ~ Ä
,ÁÁÄ Å
floatÁÁÇ á

randomnessÁÁà í
=ÁÁì î
$numÁÁï ó
,ÁÁó ò
boolÁÁô ù
snappingÁÁû ¶
=ÁÁß ®
falseÁÁ© Æ
,ÁÁÆ Ø
boolÁÁ∞ ¥
fadeOutÁÁµ º
=ÁÁΩ æ
trueÁÁø √
)ÁÁ√ ƒ
{
ËË 	
return
ÈÈ 
DOTween
ÈÈ 
.
ÈÈ 
Shake
ÈÈ  
(
ÈÈ  !
(
ÈÈ! "
)
ÈÈ" #
=>
ÈÈ$ &
target
ÈÈ' -
.
ÈÈ- .
anchoredPosition
ÈÈ. >
,
ÈÈ> ?
x
ÈÈ@ A
=>
ÈÈB D
target
ÈÈE K
.
ÈÈK L
anchoredPosition
ÈÈL \
=
ÈÈ] ^
x
ÈÈ_ `
,
ÈÈ` a
duration
ÈÈb j
,
ÈÈj k
strength
ÈÈl t
,
ÈÈt u
vibrato
ÈÈv }
,
ÈÈ} ~

randomnessÈÈ â
,ÈÈâ ä
trueÈÈã è
,ÈÈè ê
fadeOutÈÈë ò
)ÈÈò ô
.
ÍÍ 
	SetTarget
ÍÍ 
(
ÍÍ 
target
ÍÍ !
)
ÍÍ! "
.
ÍÍ" ##
SetSpecialStartupMode
ÍÍ# 8
(
ÍÍ8 9 
SpecialStartupMode
ÍÍ9 K
.
ÍÍK L
SetShake
ÍÍL T
)
ÍÍT U
.
ÍÍU V

SetOptions
ÍÍV `
(
ÍÍ` a
snapping
ÍÍa i
)
ÍÍi j
;
ÍÍj k
}
ÎÎ 	
public
ıı 
static
ıı 
Tweener
ıı 
DOShakeAnchorPos
ıı .
(
ıı. /
this
ıı/ 3
RectTransform
ıı4 A
target
ııB H
,
ııH I
float
ııJ O
duration
ııP X
,
ııX Y
Vector2
ııZ a
strength
ııb j
,
ııj k
int
ııl o
vibrato
ııp w
=
ııx y
$num
ıız |
,
ıı| }
floatıı~ É

randomnessııÑ é
=ııè ê
$numııë ì
,ııì î
boolııï ô
snappingııö ¢
=ıı£ §
falseıı• ™
,ıı™ ´
boolıı¨ ∞
fadeOutıı± ∏
=ııπ ∫
trueııª ø
)ııø ¿
{
ˆˆ 	
return
˜˜ 
DOTween
˜˜ 
.
˜˜ 
Shake
˜˜  
(
˜˜  !
(
˜˜! "
)
˜˜" #
=>
˜˜$ &
target
˜˜' -
.
˜˜- .
anchoredPosition
˜˜. >
,
˜˜> ?
x
˜˜@ A
=>
˜˜B D
target
˜˜E K
.
˜˜K L
anchoredPosition
˜˜L \
=
˜˜] ^
x
˜˜_ `
,
˜˜` a
duration
˜˜b j
,
˜˜j k
strength
˜˜l t
,
˜˜t u
vibrato
˜˜v }
,
˜˜} ~

randomness˜˜ â
,˜˜â ä
fadeOut˜˜ã í
)˜˜í ì
.
¯¯ 
	SetTarget
¯¯ 
(
¯¯ 
target
¯¯ !
)
¯¯! "
.
¯¯" ##
SetSpecialStartupMode
¯¯# 8
(
¯¯8 9 
SpecialStartupMode
¯¯9 K
.
¯¯K L
SetShake
¯¯L T
)
¯¯T U
.
¯¯U V

SetOptions
¯¯V `
(
¯¯` a
snapping
¯¯a i
)
¯¯i j
;
¯¯j k
}
˘˘ 	
public
ÖÖ 
static
ÖÖ 
Sequence
ÖÖ 
DOJumpAnchorPos
ÖÖ .
(
ÖÖ. /
this
ÖÖ/ 3
RectTransform
ÖÖ4 A
target
ÖÖB H
,
ÖÖH I
Vector2
ÖÖJ Q
endValue
ÖÖR Z
,
ÖÖZ [
float
ÖÖ\ a
	jumpPower
ÖÖb k
,
ÖÖk l
int
ÖÖm p
numJumps
ÖÖq y
,
ÖÖy z
floatÖÖ{ Ä
durationÖÖÅ â
,ÖÖâ ä
boolÖÖã è
snappingÖÖê ò
=ÖÖô ö
falseÖÖõ †
)ÖÖ† °
{
ÜÜ 	
if
áá 
(
áá 
numJumps
áá 
<
áá 
$num
áá 
)
áá 
numJumps
áá &
=
áá' (
$num
áá) *
;
áá* +
float
àà 
	startPosY
àà 
=
àà 
$num
àà 
;
àà  
float
ââ 
offsetY
ââ 
=
ââ 
-
ââ 
$num
ââ 
;
ââ 
bool
ää 

offsetYSet
ää 
=
ää 
false
ää #
;
ää# $
Sequence
éé 
s
éé 
=
éé 
DOTween
éé  
.
éé  !
Sequence
éé! )
(
éé) *
)
éé* +
;
éé+ ,
Tween
èè 
yTween
èè 
=
èè 
DOTween
èè "
.
èè" #
To
èè# %
(
èè% &
(
èè& '
)
èè' (
=>
èè) +
target
èè, 2
.
èè2 3
anchoredPosition
èè3 C
,
èèC D
x
èèE F
=>
èèG I
target
èèJ P
.
èèP Q
anchoredPosition
èèQ a
=
èèb c
x
èèd e
,
èèe f
new
èèg j
Vector2
èèk r
(
èèr s
$num
èès t
,
èèt u
	jumpPower
èèv 
)èè Ä
,èèÄ Å
durationèèÇ ä
/èèã å
(èèç é
numJumpsèèé ñ
*èèó ò
$numèèô ö
)èèö õ
)èèõ ú
.
êê 

SetOptions
êê 
(
êê 
AxisConstraint
êê *
.
êê* +
Y
êê+ ,
,
êê, -
snapping
êê. 6
)
êê6 7
.
êê7 8
SetEase
êê8 ?
(
êê? @
Ease
êê@ D
.
êêD E
OutQuad
êêE L
)
êêL M
.
êêM N
SetRelative
êêN Y
(
êêY Z
)
êêZ [
.
ëë 
SetLoops
ëë 
(
ëë 
numJumps
ëë "
*
ëë# $
$num
ëë% &
,
ëë& '
LoopType
ëë( 0
.
ëë0 1
Yoyo
ëë1 5
)
ëë5 6
.
íí 
OnStart
íí 
(
íí 
(
íí 
)
íí 
=>
íí 
	startPosY
íí '
=
íí( )
target
íí* 0
.
íí0 1
anchoredPosition
íí1 A
.
ííA B
y
ííB C
)
ííC D
;
ííD E
s
ìì 
.
ìì 
Append
ìì 
(
ìì 
DOTween
ìì 
.
ìì 
To
ìì 
(
ìì  
(
ìì  !
)
ìì! "
=>
ìì# %
target
ìì& ,
.
ìì, -
anchoredPosition
ìì- =
,
ìì= >
x
ìì? @
=>
ììA C
target
ììD J
.
ììJ K
anchoredPosition
ììK [
=
ìì\ ]
x
ìì^ _
,
ìì_ `
new
ììa d
Vector2
ììe l
(
ììl m
endValue
ììm u
.
ììu v
x
ììv w
,
ììw x
$num
ììy z
)
ììz {
,
ìì{ |
durationìì} Ö
)ììÖ Ü
.
îî 

SetOptions
îî 
(
îî  
AxisConstraint
îî  .
.
îî. /
X
îî/ 0
,
îî0 1
snapping
îî2 :
)
îî: ;
.
îî; <
SetEase
îî< C
(
îîC D
Ease
îîD H
.
îîH I
Linear
îîI O
)
îîO P
)
ïï 
.
ïï 
Join
ïï 
(
ïï 
yTween
ïï 
)
ïï 
.
ññ 
	SetTarget
ññ 
(
ññ 
target
ññ !
)
ññ! "
.
ññ" #
SetEase
ññ# *
(
ññ* +
DOTween
ññ+ 2
.
ññ2 3
defaultEaseType
ññ3 B
)
ññB C
;
ññC D
s
óó 
.
óó 
OnUpdate
óó 
(
óó 
(
óó 
)
óó 
=>
óó 
{
óó 
if
òò 
(
òò 
!
òò 

offsetYSet
òò 
)
òò  
{
òò! "

offsetYSet
ôô 
=
ôô  
true
ôô! %
;
ôô% &
offsetY
öö 
=
öö 
s
öö 
.
öö  

isRelative
öö  *
?
öö+ ,
endValue
öö- 5
.
öö5 6
y
öö6 7
:
öö8 9
endValue
öö: B
.
ööB C
y
ööC D
-
ööE F
	startPosY
ööG P
;
ööP Q
}
õõ 
Vector2
úú 
pos
úú 
=
úú 
target
úú $
.
úú$ %
anchoredPosition
úú% 5
;
úú5 6
pos
ùù 
.
ùù 
y
ùù 
+=
ùù 
	DOVirtual
ùù "
.
ùù" #

EasedValue
ùù# -
(
ùù- .
$num
ùù. /
,
ùù/ 0
offsetY
ùù1 8
,
ùù8 9
s
ùù: ;
.
ùù; <*
ElapsedDirectionalPercentage
ùù< X
(
ùùX Y
)
ùùY Z
,
ùùZ [
Ease
ùù\ `
.
ùù` a
OutQuad
ùùa h
)
ùùh i
;
ùùi j
target
ûû 
.
ûû 
anchoredPosition
ûû '
=
ûû( )
pos
ûû* -
;
ûû- .
}
üü 
)
üü 
;
üü 
return
†† 
s
†† 
;
†† 
}
°° 	
public
≠≠ 
static
≠≠ 
Tweener
≠≠ 
DONormalizedPos
≠≠ -
(
≠≠- .
this
≠≠. 2

ScrollRect
≠≠3 =
target
≠≠> D
,
≠≠D E
Vector2
≠≠F M
endValue
≠≠N V
,
≠≠V W
float
≠≠X ]
duration
≠≠^ f
,
≠≠f g
bool
≠≠h l
snapping
≠≠m u
=
≠≠v w
false
≠≠x }
)
≠≠} ~
{
ÆÆ 	
return
ØØ 
DOTween
ØØ 
.
ØØ 
To
ØØ 
(
ØØ 
(
ØØ 
)
ØØ  
=>
ØØ! #
new
ØØ$ '
Vector2
ØØ( /
(
ØØ/ 0
target
ØØ0 6
.
ØØ6 7*
horizontalNormalizedPosition
ØØ7 S
,
ØØS T
target
ØØU [
.
ØØ[ \(
verticalNormalizedPosition
ØØ\ v
)
ØØv w
,
ØØw x
x
∞∞ 
=>
∞∞ 
{
∞∞ 
target
±± 
.
±± *
horizontalNormalizedPosition
±± 7
=
±±8 9
x
±±: ;
.
±±; <
x
±±< =
;
±±= >
target
≤≤ 
.
≤≤ (
verticalNormalizedPosition
≤≤ 5
=
≤≤6 7
x
≤≤8 9
.
≤≤9 :
y
≤≤: ;
;
≤≤; <
}
≥≥ 
,
≥≥ 
endValue
≥≥ 
,
≥≥ 
duration
≥≥ %
)
≥≥% &
.
¥¥ 

SetOptions
¥¥ 
(
¥¥ 
snapping
¥¥ $
)
¥¥$ %
.
¥¥% &
	SetTarget
¥¥& /
(
¥¥/ 0
target
¥¥0 6
)
¥¥6 7
;
¥¥7 8
}
µµ 	
public
∫∫ 
static
∫∫ 
Tweener
∫∫ '
DOHorizontalNormalizedPos
∫∫ 7
(
∫∫7 8
this
∫∫8 <

ScrollRect
∫∫= G
target
∫∫H N
,
∫∫N O
float
∫∫P U
endValue
∫∫V ^
,
∫∫^ _
float
∫∫` e
duration
∫∫f n
,
∫∫n o
bool
∫∫p t
snapping
∫∫u }
=
∫∫~ 
false∫∫Ä Ö
)∫∫Ö Ü
{
ªª 	
return
ºº 
DOTween
ºº 
.
ºº 
To
ºº 
(
ºº 
(
ºº 
)
ºº  
=>
ºº! #
target
ºº$ *
.
ºº* +*
horizontalNormalizedPosition
ºº+ G
,
ººG H
x
ººI J
=>
ººK M
target
ººN T
.
ººT U*
horizontalNormalizedPosition
ººU q
=
ººr s
x
ººt u
,
ººu v
endValue
ººw 
,ºº Ä
durationººÅ â
)ººâ ä
.
ΩΩ 

SetOptions
ΩΩ 
(
ΩΩ 
snapping
ΩΩ $
)
ΩΩ$ %
.
ΩΩ% &
	SetTarget
ΩΩ& /
(
ΩΩ/ 0
target
ΩΩ0 6
)
ΩΩ6 7
;
ΩΩ7 8
}
ææ 	
public
√√ 
static
√√ 
Tweener
√√ %
DOVerticalNormalizedPos
√√ 5
(
√√5 6
this
√√6 :

ScrollRect
√√; E
target
√√F L
,
√√L M
float
√√N S
endValue
√√T \
,
√√\ ]
float
√√^ c
duration
√√d l
,
√√l m
bool
√√n r
snapping
√√s {
=
√√| }
false√√~ É
)√√É Ñ
{
ƒƒ 	
return
≈≈ 
DOTween
≈≈ 
.
≈≈ 
To
≈≈ 
(
≈≈ 
(
≈≈ 
)
≈≈  
=>
≈≈! #
target
≈≈$ *
.
≈≈* +(
verticalNormalizedPosition
≈≈+ E
,
≈≈E F
x
≈≈G H
=>
≈≈I K
target
≈≈L R
.
≈≈R S(
verticalNormalizedPosition
≈≈S m
=
≈≈n o
x
≈≈p q
,
≈≈q r
endValue
≈≈s {
,
≈≈{ |
duration≈≈} Ö
)≈≈Ö Ü
.
∆∆ 

SetOptions
∆∆ 
(
∆∆ 
snapping
∆∆ $
)
∆∆$ %
.
∆∆% &
	SetTarget
∆∆& /
(
∆∆/ 0
target
∆∆0 6
)
∆∆6 7
;
∆∆7 8
}
«« 	
public
—— 
static
—— 
TweenerCore
—— !
<
——! "
float
——" '
,
——' (
float
——) .
,
——. /
FloatOptions
——0 <
>
——< =
DOValue
——> E
(
——E F
this
——F J
Slider
——K Q
target
——R X
,
——X Y
float
——Z _
endValue
——` h
,
——h i
float
——j o
duration
——p x
,
——x y
bool
——z ~
snapping—— á
=——à â
false——ä è
)——è ê
{
““ 	
TweenerCore
”” 
<
”” 
float
”” 
,
”” 
float
”” $
,
””$ %
FloatOptions
””& 2
>
””2 3
t
””4 5
=
””6 7
DOTween
””8 ?
.
””? @
To
””@ B
(
””B C
(
””C D
)
””D E
=>
””F H
target
””I O
.
””O P
value
””P U
,
””U V
x
””W X
=>
””Y [
target
””\ b
.
””b c
value
””c h
=
””i j
x
””k l
,
””l m
endValue
””n v
,
””v w
duration””x Ä
)””Ä Å
;””Å Ç
t
‘‘ 
.
‘‘ 

SetOptions
‘‘ 
(
‘‘ 
snapping
‘‘ !
)
‘‘! "
.
‘‘" #
	SetTarget
‘‘# ,
(
‘‘, -
target
‘‘- 3
)
‘‘3 4
;
‘‘4 5
return
’’ 
t
’’ 
;
’’ 
}
÷÷ 	
public
ﬂﬂ 
static
ﬂﬂ 
TweenerCore
ﬂﬂ !
<
ﬂﬂ! "
Color
ﬂﬂ" '
,
ﬂﬂ' (
Color
ﬂﬂ) .
,
ﬂﬂ. /
ColorOptions
ﬂﬂ0 <
>
ﬂﬂ< =
DOColor
ﬂﬂ> E
(
ﬂﬂE F
this
ﬂﬂF J
Text
ﬂﬂK O
target
ﬂﬂP V
,
ﬂﬂV W
Color
ﬂﬂX ]
endValue
ﬂﬂ^ f
,
ﬂﬂf g
float
ﬂﬂh m
duration
ﬂﬂn v
)
ﬂﬂv w
{
‡‡ 	
TweenerCore
·· 
<
·· 
Color
·· 
,
·· 
Color
·· $
,
··$ %
ColorOptions
··& 2
>
··2 3
t
··4 5
=
··6 7
DOTween
··8 ?
.
··? @
To
··@ B
(
··B C
(
··C D
)
··D E
=>
··F H
target
··I O
.
··O P
color
··P U
,
··U V
x
··W X
=>
··Y [
target
··\ b
.
··b c
color
··c h
=
··i j
x
··k l
,
··l m
endValue
··n v
,
··v w
duration··x Ä
)··Ä Å
;··Å Ç
t
‚‚ 
.
‚‚ 
	SetTarget
‚‚ 
(
‚‚ 
target
‚‚ 
)
‚‚ 
;
‚‚  
return
„„ 
t
„„ 
;
„„ 
}
‰‰ 	
public
ÓÓ 
static
ÓÓ 
TweenerCore
ÓÓ !
<
ÓÓ! "
int
ÓÓ" %
,
ÓÓ% &
int
ÓÓ' *
,
ÓÓ* +
	NoOptions
ÓÓ, 5
>
ÓÓ5 6
	DOCounter
ÓÓ7 @
(
ÓÓ@ A
this
ÔÔ 
Text
ÔÔ 
target
ÔÔ 
,
ÔÔ 
int
ÔÔ !
	fromValue
ÔÔ" +
,
ÔÔ+ ,
int
ÔÔ- 0
endValue
ÔÔ1 9
,
ÔÔ9 :
float
ÔÔ; @
duration
ÔÔA I
,
ÔÔI J
bool
ÔÔK O#
addThousandsSeparator
ÔÔP e
=
ÔÔf g
true
ÔÔh l
,
ÔÔl m
CultureInfo
ÔÔn y
cultureÔÔz Å
=ÔÔÇ É
nullÔÔÑ à
)
 	
{
	 

int
ÒÒ 
v
ÒÒ 
=
ÒÒ 
	fromValue
ÒÒ 
;
ÒÒ 
CultureInfo
ÚÚ 
cInfo
ÚÚ 
=
ÚÚ 
!
ÚÚ  !#
addThousandsSeparator
ÚÚ! 6
?
ÚÚ7 8
null
ÚÚ9 =
:
ÚÚ> ?
culture
ÚÚ@ G
??
ÚÚH J
CultureInfo
ÚÚK V
.
ÚÚV W
InvariantCulture
ÚÚW g
;
ÚÚg h
TweenerCore
ÛÛ 
<
ÛÛ 
int
ÛÛ 
,
ÛÛ 
int
ÛÛ  
,
ÛÛ  !
	NoOptions
ÛÛ" +
>
ÛÛ+ ,
t
ÛÛ- .
=
ÛÛ/ 0
DOTween
ÛÛ1 8
.
ÛÛ8 9
To
ÛÛ9 ;
(
ÛÛ; <
(
ÛÛ< =
)
ÛÛ= >
=>
ÛÛ? A
v
ÛÛB C
,
ÛÛC D
x
ÛÛE F
=>
ÛÛG I
{
ÛÛJ K
v
ÙÙ 
=
ÙÙ 
x
ÙÙ 
;
ÙÙ 
target
ıı 
.
ıı 
text
ıı 
=
ıı #
addThousandsSeparator
ıı 3
?
ˆˆ 
v
ˆˆ 
.
ˆˆ 
ToString
ˆˆ  
(
ˆˆ  !
$str
ˆˆ! %
,
ˆˆ% &
cInfo
ˆˆ' ,
)
ˆˆ, -
:
˜˜ 
v
˜˜ 
.
˜˜ 
ToString
˜˜  
(
˜˜  !
)
˜˜! "
;
˜˜" #
}
¯¯ 
,
¯¯ 
endValue
¯¯ 
,
¯¯ 
duration
¯¯ !
)
¯¯! "
;
¯¯" #
t
˘˘ 
.
˘˘ 
	SetTarget
˘˘ 
(
˘˘ 
target
˘˘ 
)
˘˘ 
;
˘˘  
return
˙˙ 
t
˙˙ 
;
˙˙ 
}
˚˚ 	
public
ÄÄ 
static
ÄÄ 
TweenerCore
ÄÄ !
<
ÄÄ! "
Color
ÄÄ" '
,
ÄÄ' (
Color
ÄÄ) .
,
ÄÄ. /
ColorOptions
ÄÄ0 <
>
ÄÄ< =
DOFade
ÄÄ> D
(
ÄÄD E
this
ÄÄE I
Text
ÄÄJ N
target
ÄÄO U
,
ÄÄU V
float
ÄÄW \
endValue
ÄÄ] e
,
ÄÄe f
float
ÄÄg l
duration
ÄÄm u
)
ÄÄu v
{
ÅÅ 	
TweenerCore
ÇÇ 
<
ÇÇ 
Color
ÇÇ 
,
ÇÇ 
Color
ÇÇ $
,
ÇÇ$ %
ColorOptions
ÇÇ& 2
>
ÇÇ2 3
t
ÇÇ4 5
=
ÇÇ6 7
DOTween
ÇÇ8 ?
.
ÇÇ? @
ToAlpha
ÇÇ@ G
(
ÇÇG H
(
ÇÇH I
)
ÇÇI J
=>
ÇÇK M
target
ÇÇN T
.
ÇÇT U
color
ÇÇU Z
,
ÇÇZ [
x
ÇÇ\ ]
=>
ÇÇ^ `
target
ÇÇa g
.
ÇÇg h
color
ÇÇh m
=
ÇÇn o
x
ÇÇp q
,
ÇÇq r
endValue
ÇÇs {
,
ÇÇ{ |
durationÇÇ} Ö
)ÇÇÖ Ü
;ÇÇÜ á
t
ÉÉ 
.
ÉÉ 
	SetTarget
ÉÉ 
(
ÉÉ 
target
ÉÉ 
)
ÉÉ 
;
ÉÉ  
return
ÑÑ 
t
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
êê 
static
êê 
TweenerCore
êê !
<
êê! "
string
êê" (
,
êê( )
string
êê* 0
,
êê0 1
StringOptions
êê2 ?
>
êê? @
DOText
êêA G
(
êêG H
this
êêH L
Text
êêM Q
target
êêR X
,
êêX Y
string
êêZ `
endValue
êêa i
,
êêi j
float
êêk p
duration
êêq y
,
êêy z
bool
êê{ 
richTextEnabledêêÄ è
=êêê ë
trueêêí ñ
,êêñ ó
ScrambleModeêêò §
scrambleModeêê• ±
=êê≤ ≥
ScrambleModeêê¥ ¿
.êê¿ ¡
Noneêê¡ ≈
,êê≈ ∆
stringêê« Õ
scrambleCharsêêŒ €
=êê‹ ›
nullêêﬁ ‚
)êê‚ „
{
ëë 	
if
íí 
(
íí 
endValue
íí 
==
íí 
null
íí  
)
íí  !
{
íí" #
if
ìì 
(
ìì 
Debugger
ìì 
.
ìì 
logPriority
ìì (
>
ìì) *
$num
ìì+ ,
)
ìì, -
Debugger
ìì. 6
.
ìì6 7

LogWarning
ìì7 A
(
ììA B
$strììB †
)ìì† °
;ìì° ¢
endValue
îî 
=
îî 
$str
îî 
;
îî 
}
ïï 
TweenerCore
ññ 
<
ññ 
string
ññ 
,
ññ 
string
ññ  &
,
ññ& '
StringOptions
ññ( 5
>
ññ5 6
t
ññ7 8
=
ññ9 :
DOTween
ññ; B
.
ññB C
To
ññC E
(
ññE F
(
ññF G
)
ññG H
=>
ññI K
target
ññL R
.
ññR S
text
ññS W
,
ññW X
x
ññY Z
=>
ññ[ ]
target
ññ^ d
.
ññd e
text
ññe i
=
ññj k
x
ññl m
,
ññm n
endValue
ñño w
,
ññw x
durationññy Å
)ññÅ Ç
;ññÇ É
t
óó 
.
óó 

SetOptions
óó 
(
óó 
richTextEnabled
óó (
,
óó( )
scrambleMode
óó* 6
,
óó6 7
scrambleChars
óó8 E
)
óóE F
.
òò 
	SetTarget
òò 
(
òò 
target
òò !
)
òò! "
;
òò" #
return
ôô 
t
ôô 
;
ôô 
}
öö 	
public
ßß 
static
ßß 
Tweener
ßß 
DOBlendableColor
ßß .
(
ßß. /
this
ßß/ 3
Graphic
ßß4 ;
target
ßß< B
,
ßßB C
Color
ßßD I
endValue
ßßJ R
,
ßßR S
float
ßßT Y
duration
ßßZ b
)
ßßb c
{
®® 	
endValue
©© 
=
©© 
endValue
©© 
-
©©  !
target
©©" (
.
©©( )
color
©©) .
;
©©. /
Color
™™ 
to
™™ 
=
™™ 
new
™™ 
Color
™™  
(
™™  !
$num
™™! "
,
™™" #
$num
™™$ %
,
™™% &
$num
™™' (
,
™™( )
$num
™™* +
)
™™+ ,
;
™™, -
return
´´ 
DOTween
´´ 
.
´´ 
To
´´ 
(
´´ 
(
´´ 
)
´´  
=>
´´! #
to
´´$ &
,
´´& '
x
´´( )
=>
´´* ,
{
´´- .
Color
¨¨ 
diff
¨¨ 
=
¨¨ 
x
¨¨ 
-
¨¨  
to
¨¨! #
;
¨¨# $
to
≠≠ 
=
≠≠ 
x
≠≠ 
;
≠≠ 
target
ÆÆ 
.
ÆÆ 
color
ÆÆ 
+=
ÆÆ 
diff
ÆÆ  $
;
ÆÆ$ %
}
ØØ 
,
ØØ 
endValue
ØØ 
,
ØØ 
duration
ØØ !
)
ØØ! "
.
∞∞ 
	Blendable
∞∞ 
(
∞∞ 
)
∞∞ 
.
∞∞ 
	SetTarget
∞∞ &
(
∞∞& '
target
∞∞' -
)
∞∞- .
;
∞∞. /
}
±± 	
public
ºº 
static
ºº 
Tweener
ºº 
DOBlendableColor
ºº .
(
ºº. /
this
ºº/ 3
Image
ºº4 9
target
ºº: @
,
ºº@ A
Color
ººB G
endValue
ººH P
,
ººP Q
float
ººR W
duration
ººX `
)
ºº` a
{
ΩΩ 	
endValue
ææ 
=
ææ 
endValue
ææ 
-
ææ  !
target
ææ" (
.
ææ( )
color
ææ) .
;
ææ. /
Color
øø 
to
øø 
=
øø 
new
øø 
Color
øø  
(
øø  !
$num
øø! "
,
øø" #
$num
øø$ %
,
øø% &
$num
øø' (
,
øø( )
$num
øø* +
)
øø+ ,
;
øø, -
return
¿¿ 
DOTween
¿¿ 
.
¿¿ 
To
¿¿ 
(
¿¿ 
(
¿¿ 
)
¿¿  
=>
¿¿! #
to
¿¿$ &
,
¿¿& '
x
¿¿( )
=>
¿¿* ,
{
¿¿- .
Color
¡¡ 
diff
¡¡ 
=
¡¡ 
x
¡¡ 
-
¡¡  
to
¡¡! #
;
¡¡# $
to
¬¬ 
=
¬¬ 
x
¬¬ 
;
¬¬ 
target
√√ 
.
√√ 
color
√√ 
+=
√√ 
diff
√√  $
;
√√$ %
}
ƒƒ 
,
ƒƒ 
endValue
ƒƒ 
,
ƒƒ 
duration
ƒƒ !
)
ƒƒ! "
.
≈≈ 
	Blendable
≈≈ 
(
≈≈ 
)
≈≈ 
.
≈≈ 
	SetTarget
≈≈ &
(
≈≈& '
target
≈≈' -
)
≈≈- .
;
≈≈. /
}
∆∆ 	
public
—— 
static
—— 
Tweener
—— 
DOBlendableColor
—— .
(
——. /
this
——/ 3
Text
——4 8
target
——9 ?
,
——? @
Color
——A F
endValue
——G O
,
——O P
float
——Q V
duration
——W _
)
——_ `
{
““ 	
endValue
”” 
=
”” 
endValue
”” 
-
””  !
target
””" (
.
””( )
color
””) .
;
””. /
Color
‘‘ 
to
‘‘ 
=
‘‘ 
new
‘‘ 
Color
‘‘  
(
‘‘  !
$num
‘‘! "
,
‘‘" #
$num
‘‘$ %
,
‘‘% &
$num
‘‘' (
,
‘‘( )
$num
‘‘* +
)
‘‘+ ,
;
‘‘, -
return
’’ 
DOTween
’’ 
.
’’ 
To
’’ 
(
’’ 
(
’’ 
)
’’  
=>
’’! #
to
’’$ &
,
’’& '
x
’’( )
=>
’’* ,
{
’’- .
Color
÷÷ 
diff
÷÷ 
=
÷÷ 
x
÷÷ 
-
÷÷  
to
÷÷! #
;
÷÷# $
to
◊◊ 
=
◊◊ 
x
◊◊ 
;
◊◊ 
target
ÿÿ 
.
ÿÿ 
color
ÿÿ 
+=
ÿÿ 
diff
ÿÿ  $
;
ÿÿ$ %
}
ŸŸ 
,
ŸŸ 
endValue
ŸŸ 
,
ŸŸ 
duration
ŸŸ !
)
ŸŸ! "
.
⁄⁄ 
	Blendable
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
.
⁄⁄ 
	SetTarget
⁄⁄ &
(
⁄⁄& '
target
⁄⁄' -
)
⁄⁄- .
;
⁄⁄. /
}
€€ 	
public
ÁÁ 
static
ÁÁ 
class
ÁÁ 
Utils
ÁÁ !
{
ËË 	
public
ÌÌ 
static
ÌÌ 
Vector2
ÌÌ !#
SwitchToRectTransform
ÌÌ" 7
(
ÌÌ7 8
RectTransform
ÌÌ8 E
from
ÌÌF J
,
ÌÌJ K
RectTransform
ÌÌL Y
to
ÌÌZ \
)
ÌÌ\ ]
{
ÓÓ 
Vector2
ÔÔ 

localPoint
ÔÔ "
;
ÔÔ" #
Vector2
 $
fromPivotDerivedOffset
 .
=
/ 0
new
1 4
Vector2
5 <
(
< =
from
= A
.
A B
rect
B F
.
F G
width
G L
*
M N
$num
O S
+
T U
from
V Z
.
Z [
rect
[ _
.
_ `
xMin
` d
,
d e
from
f j
.
j k
rect
k o
.
o p
height
p v
*
w x
$num
y }
+
~ 
fromÄ Ñ
.Ñ Ö
rectÖ â
.â ä
yMinä é
)é è
;è ê
Vector2
ÒÒ 
screenP
ÒÒ 
=
ÒÒ  !"
RectTransformUtility
ÒÒ" 6
.
ÒÒ6 7 
WorldToScreenPoint
ÒÒ7 I
(
ÒÒI J
null
ÒÒJ N
,
ÒÒN O
from
ÒÒP T
.
ÒÒT U
position
ÒÒU ]
)
ÒÒ] ^
;
ÒÒ^ _
screenP
ÚÚ 
+=
ÚÚ $
fromPivotDerivedOffset
ÚÚ 1
;
ÚÚ1 2"
RectTransformUtility
ÛÛ $
.
ÛÛ$ %0
"ScreenPointToLocalPointInRectangle
ÛÛ% G
(
ÛÛG H
to
ÛÛH J
,
ÛÛJ K
screenP
ÛÛL S
,
ÛÛS T
null
ÛÛU Y
,
ÛÛY Z
out
ÛÛ[ ^

localPoint
ÛÛ_ i
)
ÛÛi j
;
ÛÛj k
Vector2
ÙÙ  
pivotDerivedOffset
ÙÙ *
=
ÙÙ+ ,
new
ÙÙ- 0
Vector2
ÙÙ1 8
(
ÙÙ8 9
to
ÙÙ9 ;
.
ÙÙ; <
rect
ÙÙ< @
.
ÙÙ@ A
width
ÙÙA F
*
ÙÙG H
$num
ÙÙI M
+
ÙÙN O
to
ÙÙP R
.
ÙÙR S
rect
ÙÙS W
.
ÙÙW X
xMin
ÙÙX \
,
ÙÙ\ ]
to
ÙÙ^ `
.
ÙÙ` a
rect
ÙÙa e
.
ÙÙe f
height
ÙÙf l
*
ÙÙm n
$num
ÙÙo s
+
ÙÙt u
to
ÙÙv x
.
ÙÙx y
rect
ÙÙy }
.
ÙÙ} ~
yMinÙÙ~ Ç
)ÙÙÇ É
;ÙÙÉ Ñ
return
ıı 
to
ıı 
.
ıı 
anchoredPosition
ıı *
+
ıı+ ,

localPoint
ıı- 7
-
ıı8 9 
pivotDerivedOffset
ıı: L
;
ııL M
}
ˆˆ 
}
˜˜ 	
}
¯¯ 
}˘˘ ‰Í
èC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModuleUnityVersion.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class %
DOTweenModuleUnityVersion .
{ 
public 
static 
Sequence 
DOGradientColor .
(. /
this/ 3
Material4 <
target= C
,C D
GradientE M
gradientN V
,V W
floatX ]
duration^ f
)f g
{ 	
Sequence   
s   
=   
DOTween    
.    !
Sequence  ! )
(  ) *
)  * +
;  + ,
GradientColorKey!! 
[!! 
]!! 
colors!! %
=!!& '
gradient!!( 0
.!!0 1
	colorKeys!!1 :
;!!: ;
int"" 
len"" 
="" 
colors"" 
."" 
Length"" #
;""# $
for## 
(## 
int## 
i## 
=## 
$num## 
;## 
i## 
<## 
len##  #
;### $
++##% '
i##' (
)##( )
{##* +
GradientColorKey$$  
c$$! "
=$$# $
colors$$% +
[$$+ ,
i$$, -
]$$- .
;$$. /
if%% 
(%% 
i%% 
==%% 
$num%% 
&&%% 
c%% 
.%%  
time%%  $
<=%%% '
$num%%( )
)%%) *
{%%+ ,
target&& 
.&& 
color&&  
=&&! "
c&&# $
.&&$ %
color&&% *
;&&* +
continue'' 
;'' 
}(( 
float)) 
colorDuration)) #
=))$ %
i))& '
==))( *
len))+ .
-))/ 0
$num))1 2
?** 
duration** 
-**  
s**! "
.**" #
Duration**# +
(**+ ,
false**, 1
)**1 2
:++ 
duration++ 
*++  
(++! "
i++" #
==++$ &
$num++' (
?++) *
c+++ ,
.++, -
time++- 1
:++2 3
c++4 5
.++5 6
time++6 :
-++; <
colors++= C
[++C D
i++D E
-++F G
$num++H I
]++I J
.++J K
time++K O
)++O P
;++P Q
s,, 
.,, 
Append,, 
(,, 
target,, 
.,,  
DOColor,,  '
(,,' (
c,,( )
.,,) *
color,,* /
,,,/ 0
colorDuration,,1 >
),,> ?
.,,? @
SetEase,,@ G
(,,G H
Ease,,H L
.,,L M
Linear,,M S
),,S T
),,T U
;,,U V
}-- 
s.. 
... 
	SetTarget.. 
(.. 
target.. 
).. 
;..  
return// 
s// 
;// 
}00 	
public77 
static77 
Sequence77 
DOGradientColor77 .
(77. /
this77/ 3
Material774 <
target77= C
,77C D
Gradient77E M
gradient77N V
,77V W
string77X ^
property77_ g
,77g h
float77i n
duration77o w
)77w x
{88 	
Sequence99 
s99 
=99 
DOTween99  
.99  !
Sequence99! )
(99) *
)99* +
;99+ ,
GradientColorKey:: 
[:: 
]:: 
colors:: %
=::& '
gradient::( 0
.::0 1
	colorKeys::1 :
;::: ;
int;; 
len;; 
=;; 
colors;; 
.;; 
Length;; #
;;;# $
for<< 
(<< 
int<< 
i<< 
=<< 
$num<< 
;<< 
i<< 
<<< 
len<<  #
;<<# $
++<<% '
i<<' (
)<<( )
{<<* +
GradientColorKey==  
c==! "
===# $
colors==% +
[==+ ,
i==, -
]==- .
;==. /
if>> 
(>> 
i>> 
==>> 
$num>> 
&&>> 
c>> 
.>>  
time>>  $
<=>>% '
$num>>( )
)>>) *
{>>+ ,
target?? 
.?? 
SetColor?? #
(??# $
property??$ ,
,??, -
c??. /
.??/ 0
color??0 5
)??5 6
;??6 7
continue@@ 
;@@ 
}AA 
floatBB 
colorDurationBB #
=BB$ %
iBB& '
==BB( *
lenBB+ .
-BB/ 0
$numBB1 2
?CC 
durationCC 
-CC  
sCC! "
.CC" #
DurationCC# +
(CC+ ,
falseCC, 1
)CC1 2
:DD 
durationDD 
*DD  
(DD! "
iDD" #
==DD$ &
$numDD' (
?DD) *
cDD+ ,
.DD, -
timeDD- 1
:DD2 3
cDD4 5
.DD5 6
timeDD6 :
-DD; <
colorsDD= C
[DDC D
iDDD E
-DDF G
$numDDH I
]DDI J
.DDJ K
timeDDK O
)DDO P
;DDP Q
sEE 
.EE 
AppendEE 
(EE 
targetEE 
.EE  
DOColorEE  '
(EE' (
cEE( )
.EE) *
colorEE* /
,EE/ 0
propertyEE1 9
,EE9 :
colorDurationEE; H
)EEH I
.EEI J
SetEaseEEJ Q
(EEQ R
EaseEER V
.EEV W
LinearEEW ]
)EE] ^
)EE^ _
;EE_ `
}FF 
sGG 
.GG 
	SetTargetGG 
(GG 
targetGG 
)GG 
;GG  
returnHH 
sHH 
;HH 
}II 	
publicZZ 
staticZZ "
CustomYieldInstructionZZ ,
WaitForCompletionZZ- >
(ZZ> ?
thisZZ? C
TweenZZD I
tZZJ K
,ZZK L
boolZZM Q(
returnCustomYieldInstructionZZR n
)ZZn o
{[[ 	
if\\ 
(\\ 
!\\ 
t\\ 
.\\ 
active\\ 
)\\ 
{\\ 
if]] 
(]] 
Debugger]] 
.]] 
logPriority]] (
>]]) *
$num]]+ ,
)]], -
Debugger]]. 6
.]]6 7
LogInvalidTween]]7 F
(]]F G
t]]G H
)]]H I
;]]I J
return^^ 
null^^ 
;^^ 
}__ 
return`` 
new``  
DOTweenCYInstruction`` +
.``+ ,
WaitForCompletion``, =
(``= >
t``> ?
)``? @
;``@ A
}aa 	
publichh 
statichh "
CustomYieldInstructionhh ,
WaitForRewindhh- :
(hh: ;
thishh; ?
Tweenhh@ E
thhF G
,hhG H
boolhhI M(
returnCustomYieldInstructionhhN j
)hhj k
{ii 	
ifjj 
(jj 
!jj 
tjj 
.jj 
activejj 
)jj 
{jj 
ifkk 
(kk 
Debuggerkk 
.kk 
logPrioritykk (
>kk) *
$numkk+ ,
)kk, -
Debuggerkk. 6
.kk6 7
LogInvalidTweenkk7 F
(kkF G
tkkG H
)kkH I
;kkI J
returnll 
nullll 
;ll 
}mm 
returnnn 
newnn  
DOTweenCYInstructionnn +
.nn+ ,
WaitForRewindnn, 9
(nn9 :
tnn: ;
)nn; <
;nn< =
}oo 	
publicvv 
staticvv "
CustomYieldInstructionvv ,
WaitForKillvv- 8
(vv8 9
thisvv9 =
Tweenvv> C
tvvD E
,vvE F
boolvvG K(
returnCustomYieldInstructionvvL h
)vvh i
{ww 	
ifxx 
(xx 
!xx 
txx 
.xx 
activexx 
)xx 
{xx 
ifyy 
(yy 
Debuggeryy 
.yy 
logPriorityyy (
>yy) *
$numyy+ ,
)yy, -
Debuggeryy. 6
.yy6 7
LogInvalidTweenyy7 F
(yyF G
tyyG H
)yyH I
;yyI J
returnzz 
nullzz 
;zz 
}{{ 
return|| 
new||  
DOTweenCYInstruction|| +
.||+ ,
WaitForKill||, 7
(||7 8
t||8 9
)||9 :
;||: ;
}}} 	
public
ÖÖ 
static
ÖÖ $
CustomYieldInstruction
ÖÖ ,!
WaitForElapsedLoops
ÖÖ- @
(
ÖÖ@ A
this
ÖÖA E
Tween
ÖÖF K
t
ÖÖL M
,
ÖÖM N
int
ÖÖO R
elapsedLoops
ÖÖS _
,
ÖÖ_ `
bool
ÖÖa e+
returnCustomYieldInstructionÖÖf Ç
)ÖÖÇ É
{
ÜÜ 	
if
áá 
(
áá 
!
áá 
t
áá 
.
áá 
active
áá 
)
áá 
{
áá 
if
àà 
(
àà 
Debugger
àà 
.
àà 
logPriority
àà (
>
àà) *
$num
àà+ ,
)
àà, -
Debugger
àà. 6
.
àà6 7
LogInvalidTween
àà7 F
(
ààF G
t
ààG H
)
ààH I
;
ààI J
return
ââ 
null
ââ 
;
ââ 
}
ää 
return
ãã 
new
ãã "
DOTweenCYInstruction
ãã +
.
ãã+ ,!
WaitForElapsedLoops
ãã, ?
(
ãã? @
t
ãã@ A
,
ããA B
elapsedLoops
ããC O
)
ããO P
;
ããP Q
}
åå 	
public
ïï 
static
ïï $
CustomYieldInstruction
ïï ,
WaitForPosition
ïï- <
(
ïï< =
this
ïï= A
Tween
ïïB G
t
ïïH I
,
ïïI J
float
ïïK P
position
ïïQ Y
,
ïïY Z
bool
ïï[ _*
returnCustomYieldInstruction
ïï` |
)
ïï| }
{
ññ 	
if
óó 
(
óó 
!
óó 
t
óó 
.
óó 
active
óó 
)
óó 
{
óó 
if
òò 
(
òò 
Debugger
òò 
.
òò 
logPriority
òò (
>
òò) *
$num
òò+ ,
)
òò, -
Debugger
òò. 6
.
òò6 7
LogInvalidTween
òò7 F
(
òòF G
t
òòG H
)
òòH I
;
òòI J
return
ôô 
null
ôô 
;
ôô 
}
öö 
return
õõ 
new
õõ "
DOTweenCYInstruction
õõ +
.
õõ+ ,
WaitForPosition
õõ, ;
(
õõ; <
t
õõ< =
,
õõ= >
position
õõ? G
)
õõG H
;
õõH I
}
úú 	
public
§§ 
static
§§ $
CustomYieldInstruction
§§ ,
WaitForStart
§§- 9
(
§§9 :
this
§§: >
Tween
§§? D
t
§§E F
,
§§F G
bool
§§H L*
returnCustomYieldInstruction
§§M i
)
§§i j
{
•• 	
if
¶¶ 
(
¶¶ 
!
¶¶ 
t
¶¶ 
.
¶¶ 
active
¶¶ 
)
¶¶ 
{
¶¶ 
if
ßß 
(
ßß 
Debugger
ßß 
.
ßß 
logPriority
ßß (
>
ßß) *
$num
ßß+ ,
)
ßß, -
Debugger
ßß. 6
.
ßß6 7
LogInvalidTween
ßß7 F
(
ßßF G
t
ßßG H
)
ßßH I
;
ßßI J
return
®® 
null
®® 
;
®® 
}
©© 
return
™™ 
new
™™ "
DOTweenCYInstruction
™™ +
.
™™+ ,
WaitForStart
™™, 8
(
™™8 9
t
™™9 :
)
™™: ;
;
™™; <
}
´´ 	
public
ºº 
static
ºº 
TweenerCore
ºº !
<
ºº! "
Vector2
ºº" )
,
ºº) *
Vector2
ºº+ 2
,
ºº2 3
VectorOptions
ºº4 A
>
ººA B
DOOffset
ººC K
(
ººK L
this
ººL P
Material
ººQ Y
target
ººZ `
,
ºº` a
Vector2
ººb i
endValue
ººj r
,
ººr s
int
ººt w

propertyIDººx Ç
,ººÇ É
floatººÑ â
durationººä í
)ººí ì
{
ΩΩ 	
if
ææ 
(
ææ 
!
ææ 
target
ææ 
.
ææ 
HasProperty
ææ #
(
ææ# $

propertyID
ææ$ .
)
ææ. /
)
ææ/ 0
{
ææ1 2
if
øø 
(
øø 
Debugger
øø 
.
øø 
logPriority
øø (
>
øø) *
$num
øø+ ,
)
øø, -
Debugger
øø. 6
.
øø6 7(
LogMissingMaterialProperty
øø7 Q
(
øøQ R

propertyID
øøR \
)
øø\ ]
;
øø] ^
return
¿¿ 
null
¿¿ 
;
¿¿ 
}
¡¡ 
TweenerCore
¬¬ 
<
¬¬ 
Vector2
¬¬ 
,
¬¬  
Vector2
¬¬! (
,
¬¬( )
VectorOptions
¬¬* 7
>
¬¬7 8
t
¬¬9 :
=
¬¬; <
DOTween
¬¬= D
.
¬¬D E
To
¬¬E G
(
¬¬G H
(
¬¬H I
)
¬¬I J
=>
¬¬K M
target
¬¬N T
.
¬¬T U
GetTextureOffset
¬¬U e
(
¬¬e f

propertyID
¬¬f p
)
¬¬p q
,
¬¬q r
x
¬¬s t
=>
¬¬u w
target
¬¬x ~
.
¬¬~ 
SetTextureOffset¬¬ è
(¬¬è ê

propertyID¬¬ê ö
,¬¬ö õ
x¬¬ú ù
)¬¬ù û
,¬¬û ü
endValue¬¬† ®
,¬¬® ©
duration¬¬™ ≤
)¬¬≤ ≥
;¬¬≥ ¥
t
√√ 
.
√√ 
	SetTarget
√√ 
(
√√ 
target
√√ 
)
√√ 
;
√√  
return
ƒƒ 
t
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
ÃÃ 
static
ÃÃ 
TweenerCore
ÃÃ !
<
ÃÃ! "
Vector2
ÃÃ" )
,
ÃÃ) *
Vector2
ÃÃ+ 2
,
ÃÃ2 3
VectorOptions
ÃÃ4 A
>
ÃÃA B
DOTiling
ÃÃC K
(
ÃÃK L
this
ÃÃL P
Material
ÃÃQ Y
target
ÃÃZ `
,
ÃÃ` a
Vector2
ÃÃb i
endValue
ÃÃj r
,
ÃÃr s
int
ÃÃt w

propertyIDÃÃx Ç
,ÃÃÇ É
floatÃÃÑ â
durationÃÃä í
)ÃÃí ì
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
target
ŒŒ 
.
ŒŒ 
HasProperty
ŒŒ #
(
ŒŒ# $

propertyID
ŒŒ$ .
)
ŒŒ. /
)
ŒŒ/ 0
{
ŒŒ1 2
if
œœ 
(
œœ 
Debugger
œœ 
.
œœ 
logPriority
œœ (
>
œœ) *
$num
œœ+ ,
)
œœ, -
Debugger
œœ. 6
.
œœ6 7(
LogMissingMaterialProperty
œœ7 Q
(
œœQ R

propertyID
œœR \
)
œœ\ ]
;
œœ] ^
return
–– 
null
–– 
;
–– 
}
—— 
TweenerCore
““ 
<
““ 
Vector2
““ 
,
““  
Vector2
““! (
,
““( )
VectorOptions
““* 7
>
““7 8
t
““9 :
=
““; <
DOTween
““= D
.
““D E
To
““E G
(
““G H
(
““H I
)
““I J
=>
““K M
target
““N T
.
““T U
GetTextureScale
““U d
(
““d e

propertyID
““e o
)
““o p
,
““p q
x
““r s
=>
““t v
target
““w }
.
““} ~
SetTextureScale““~ ç
(““ç é

propertyID““é ò
,““ò ô
x““ö õ
)““õ ú
,““ú ù
endValue““û ¶
,““¶ ß
duration““® ∞
)““∞ ±
;““± ≤
t
”” 
.
”” 
	SetTarget
”” 
(
”” 
target
”” 
)
”” 
;
””  
return
‘‘ 
t
‘‘ 
;
‘‘ 
}
’’ 	
public
‰‰ 
static
‰‰ 
async
‰‰ 
Task
‰‰  $
AsyncWaitForCompletion
‰‰! 7
(
‰‰7 8
this
‰‰8 <
Tween
‰‰= B
t
‰‰C D
)
‰‰D E
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
t
ÊÊ 
.
ÊÊ 
active
ÊÊ 
)
ÊÊ 
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
Debugger
ÁÁ 
.
ÁÁ 
logPriority
ÁÁ (
>
ÁÁ) *
$num
ÁÁ+ ,
)
ÁÁ, -
Debugger
ÁÁ. 6
.
ÁÁ6 7
LogInvalidTween
ÁÁ7 F
(
ÁÁF G
t
ÁÁG H
)
ÁÁH I
;
ÁÁI J
return
ËË 
;
ËË 
}
ÈÈ 
while
ÍÍ 
(
ÍÍ 
t
ÍÍ 
.
ÍÍ 
active
ÍÍ 
&&
ÍÍ 
!
ÍÍ  
t
ÍÍ  !
.
ÍÍ! "

IsComplete
ÍÍ" ,
(
ÍÍ, -
)
ÍÍ- .
)
ÍÍ. /
await
ÍÍ0 5
Task
ÍÍ6 :
.
ÍÍ: ;
Yield
ÍÍ; @
(
ÍÍ@ A
)
ÍÍA B
;
ÍÍB C
}
ÎÎ 	
public
ÚÚ 
static
ÚÚ 
async
ÚÚ 
Task
ÚÚ   
AsyncWaitForRewind
ÚÚ! 3
(
ÚÚ3 4
this
ÚÚ4 8
Tween
ÚÚ9 >
t
ÚÚ? @
)
ÚÚ@ A
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
!
ÙÙ 
t
ÙÙ 
.
ÙÙ 
active
ÙÙ 
)
ÙÙ 
{
ÙÙ 
if
ıı 
(
ıı 
Debugger
ıı 
.
ıı 
logPriority
ıı (
>
ıı) *
$num
ıı+ ,
)
ıı, -
Debugger
ıı. 6
.
ıı6 7
LogInvalidTween
ıı7 F
(
ııF G
t
ııG H
)
ııH I
;
ııI J
return
ˆˆ 
;
ˆˆ 
}
˜˜ 
while
¯¯ 
(
¯¯ 
t
¯¯ 
.
¯¯ 
active
¯¯ 
&&
¯¯ 
(
¯¯  
!
¯¯  !
t
¯¯! "
.
¯¯" #

playedOnce
¯¯# -
||
¯¯. 0
t
¯¯1 2
.
¯¯2 3
position
¯¯3 ;
*
¯¯< =
(
¯¯> ?
t
¯¯? @
.
¯¯@ A
CompletedLoops
¯¯A O
(
¯¯O P
)
¯¯P Q
+
¯¯R S
$num
¯¯T U
)
¯¯U V
>
¯¯W X
$num
¯¯Y Z
)
¯¯Z [
)
¯¯[ \
await
¯¯] b
Task
¯¯c g
.
¯¯g h
Yield
¯¯h m
(
¯¯m n
)
¯¯n o
;
¯¯o p
}
˘˘ 	
public
ÄÄ 
static
ÄÄ 
async
ÄÄ 
Task
ÄÄ  
AsyncWaitForKill
ÄÄ! 1
(
ÄÄ1 2
this
ÄÄ2 6
Tween
ÄÄ7 <
t
ÄÄ= >
)
ÄÄ> ?
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
t
ÇÇ 
.
ÇÇ 
active
ÇÇ 
)
ÇÇ 
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
Debugger
ÉÉ 
.
ÉÉ 
logPriority
ÉÉ (
>
ÉÉ) *
$num
ÉÉ+ ,
)
ÉÉ, -
Debugger
ÉÉ. 6
.
ÉÉ6 7
LogInvalidTween
ÉÉ7 F
(
ÉÉF G
t
ÉÉG H
)
ÉÉH I
;
ÉÉI J
return
ÑÑ 
;
ÑÑ 
}
ÖÖ 
while
ÜÜ 
(
ÜÜ 
t
ÜÜ 
.
ÜÜ 
active
ÜÜ 
)
ÜÜ 
await
ÜÜ "
Task
ÜÜ# '
.
ÜÜ' (
Yield
ÜÜ( -
(
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0
}
áá 	
public
èè 
static
èè 
async
èè 
Task
èè  &
AsyncWaitForElapsedLoops
èè! 9
(
èè9 :
this
èè: >
Tween
èè? D
t
èèE F
,
èèF G
int
èèH K
elapsedLoops
èèL X
)
èèX Y
{
êê 	
if
ëë 
(
ëë 
!
ëë 
t
ëë 
.
ëë 
active
ëë 
)
ëë 
{
ëë 
if
íí 
(
íí 
Debugger
íí 
.
íí 
logPriority
íí (
>
íí) *
$num
íí+ ,
)
íí, -
Debugger
íí. 6
.
íí6 7
LogInvalidTween
íí7 F
(
ííF G
t
ííG H
)
ííH I
;
ííI J
return
ìì 
;
ìì 
}
îî 
while
ïï 
(
ïï 
t
ïï 
.
ïï 
active
ïï 
&&
ïï 
t
ïï  
.
ïï  !
CompletedLoops
ïï! /
(
ïï/ 0
)
ïï0 1
<
ïï2 3
elapsedLoops
ïï4 @
)
ïï@ A
await
ïïB G
Task
ïïH L
.
ïïL M
Yield
ïïM R
(
ïïR S
)
ïïS T
;
ïïT U
}
ññ 	
public
üü 
static
üü 
async
üü 
Task
üü  "
AsyncWaitForPosition
üü! 5
(
üü5 6
this
üü6 :
Tween
üü; @
t
üüA B
,
üüB C
float
üüD I
position
üüJ R
)
üüR S
{
†† 	
if
°° 
(
°° 
!
°° 
t
°° 
.
°° 
active
°° 
)
°° 
{
°° 
if
¢¢ 
(
¢¢ 
Debugger
¢¢ 
.
¢¢ 
logPriority
¢¢ (
>
¢¢) *
$num
¢¢+ ,
)
¢¢, -
Debugger
¢¢. 6
.
¢¢6 7
LogInvalidTween
¢¢7 F
(
¢¢F G
t
¢¢G H
)
¢¢H I
;
¢¢I J
return
££ 
;
££ 
}
§§ 
while
•• 
(
•• 
t
•• 
.
•• 
active
•• 
&&
•• 
t
••  
.
••  !
position
••! )
*
••* +
(
••, -
t
••- .
.
••. /
CompletedLoops
••/ =
(
••= >
)
••> ?
+
••@ A
$num
••B C
)
••C D
<
••E F
position
••G O
)
••O P
await
••Q V
Task
••W [
.
••[ \
Yield
••\ a
(
••a b
)
••b c
;
••c d
}
¶¶ 	
public
≠≠ 
static
≠≠ 
async
≠≠ 
Task
≠≠  
AsyncWaitForStart
≠≠! 2
(
≠≠2 3
this
≠≠3 7
Tween
≠≠8 =
t
≠≠> ?
)
≠≠? @
{
ÆÆ 	
if
ØØ 
(
ØØ 
!
ØØ 
t
ØØ 
.
ØØ 
active
ØØ 
)
ØØ 
{
ØØ 
if
∞∞ 
(
∞∞ 
Debugger
∞∞ 
.
∞∞ 
logPriority
∞∞ (
>
∞∞) *
$num
∞∞+ ,
)
∞∞, -
Debugger
∞∞. 6
.
∞∞6 7
LogInvalidTween
∞∞7 F
(
∞∞F G
t
∞∞G H
)
∞∞H I
;
∞∞I J
return
±± 
;
±± 
}
≤≤ 
while
≥≥ 
(
≥≥ 
t
≥≥ 
.
≥≥ 
active
≥≥ 
&&
≥≥ 
!
≥≥  
t
≥≥  !
.
≥≥! "

playedOnce
≥≥" ,
)
≥≥, -
await
≥≥. 3
Task
≥≥4 8
.
≥≥8 9
Yield
≥≥9 >
(
≥≥> ?
)
≥≥? @
;
≥≥@ A
}
¥¥ 	
}
ΩΩ 
public
ƒƒ 

static
ƒƒ 
class
ƒƒ "
DOTweenCYInstruction
ƒƒ ,
{
≈≈ 
public
∆∆ 
class
∆∆ 
WaitForCompletion
∆∆ &
:
∆∆' ($
CustomYieldInstruction
∆∆) ?
{
«« 	
public
»» 
override
»» 
bool
»»  
keepWaiting
»»! ,
{
»»- .
get
»»/ 2
{
»»3 4
return
…… 
t
…… 
.
…… 
active
…… 
&&
……  "
!
……# $
t
……$ %
.
……% &

IsComplete
……& 0
(
……0 1
)
……1 2
;
……2 3
}
   
}
   
readonly
ÀÀ 
Tween
ÀÀ 
t
ÀÀ 
;
ÀÀ 
public
ÃÃ 
WaitForCompletion
ÃÃ $
(
ÃÃ$ %
Tween
ÃÃ% *
tween
ÃÃ+ 0
)
ÃÃ0 1
{
ÕÕ 
t
ŒŒ 
=
ŒŒ 
tween
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
public
““ 
class
““ 
WaitForRewind
““ "
:
““# $$
CustomYieldInstruction
““% ;
{
”” 	
public
‘‘ 
override
‘‘ 
bool
‘‘  
keepWaiting
‘‘! ,
{
‘‘- .
get
‘‘/ 2
{
‘‘3 4
return
’’ 
t
’’ 
.
’’ 
active
’’ 
&&
’’  "
(
’’# $
!
’’$ %
t
’’% &
.
’’& '

playedOnce
’’' 1
||
’’2 4
t
’’5 6
.
’’6 7
position
’’7 ?
*
’’@ A
(
’’B C
t
’’C D
.
’’D E
CompletedLoops
’’E S
(
’’S T
)
’’T U
+
’’V W
$num
’’X Y
)
’’Y Z
>
’’[ \
$num
’’] ^
)
’’^ _
;
’’_ `
}
÷÷ 
}
÷÷ 
readonly
◊◊ 
Tween
◊◊ 
t
◊◊ 
;
◊◊ 
public
ÿÿ 
WaitForRewind
ÿÿ  
(
ÿÿ  !
Tween
ÿÿ! &
tween
ÿÿ' ,
)
ÿÿ, -
{
ŸŸ 
t
⁄⁄ 
=
⁄⁄ 
tween
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
public
ﬁﬁ 
class
ﬁﬁ 
WaitForKill
ﬁﬁ  
:
ﬁﬁ! "$
CustomYieldInstruction
ﬁﬁ# 9
{
ﬂﬂ 	
public
‡‡ 
override
‡‡ 
bool
‡‡  
keepWaiting
‡‡! ,
{
‡‡- .
get
‡‡/ 2
{
‡‡3 4
return
·· 
t
·· 
.
·· 
active
·· 
;
··  
}
‚‚ 
}
‚‚ 
readonly
„„ 
Tween
„„ 
t
„„ 
;
„„ 
public
‰‰ 
WaitForKill
‰‰ 
(
‰‰ 
Tween
‰‰ $
tween
‰‰% *
)
‰‰* +
{
ÂÂ 
t
ÊÊ 
=
ÊÊ 
tween
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}
ËË 	
public
ÍÍ 
class
ÍÍ !
WaitForElapsedLoops
ÍÍ (
:
ÍÍ) *$
CustomYieldInstruction
ÍÍ+ A
{
ÎÎ 	
public
ÏÏ 
override
ÏÏ 
bool
ÏÏ  
keepWaiting
ÏÏ! ,
{
ÏÏ- .
get
ÏÏ/ 2
{
ÏÏ3 4
return
ÌÌ 
t
ÌÌ 
.
ÌÌ 
active
ÌÌ 
&&
ÌÌ  "
t
ÌÌ# $
.
ÌÌ$ %
CompletedLoops
ÌÌ% 3
(
ÌÌ3 4
)
ÌÌ4 5
<
ÌÌ6 7
elapsedLoops
ÌÌ8 D
;
ÌÌD E
}
ÓÓ 
}
ÓÓ 
readonly
ÔÔ 
Tween
ÔÔ 
t
ÔÔ 
;
ÔÔ 
readonly
 
int
 
elapsedLoops
 %
;
% &
public
ÒÒ !
WaitForElapsedLoops
ÒÒ &
(
ÒÒ& '
Tween
ÒÒ' ,
tween
ÒÒ- 2
,
ÒÒ2 3
int
ÒÒ4 7
elapsedLoops
ÒÒ8 D
)
ÒÒD E
{
ÚÚ 
t
ÛÛ 
=
ÛÛ 
tween
ÛÛ 
;
ÛÛ 
this
ÙÙ 
.
ÙÙ 
elapsedLoops
ÙÙ !
=
ÙÙ" #
elapsedLoops
ÙÙ$ 0
;
ÙÙ0 1
}
ıı 
}
ˆˆ 	
public
¯¯ 
class
¯¯ 
WaitForPosition
¯¯ $
:
¯¯% &$
CustomYieldInstruction
¯¯' =
{
˘˘ 	
public
˙˙ 
override
˙˙ 
bool
˙˙  
keepWaiting
˙˙! ,
{
˙˙- .
get
˙˙/ 2
{
˙˙3 4
return
˚˚ 
t
˚˚ 
.
˚˚ 
active
˚˚ 
&&
˚˚  "
t
˚˚# $
.
˚˚$ %
position
˚˚% -
*
˚˚. /
(
˚˚0 1
t
˚˚1 2
.
˚˚2 3
CompletedLoops
˚˚3 A
(
˚˚A B
)
˚˚B C
+
˚˚D E
$num
˚˚F G
)
˚˚G H
<
˚˚I J
position
˚˚K S
;
˚˚S T
}
¸¸ 
}
¸¸ 
readonly
˝˝ 
Tween
˝˝ 
t
˝˝ 
;
˝˝ 
readonly
˛˛ 
float
˛˛ 
position
˛˛ #
;
˛˛# $
public
ˇˇ 
WaitForPosition
ˇˇ "
(
ˇˇ" #
Tween
ˇˇ# (
tween
ˇˇ) .
,
ˇˇ. /
float
ˇˇ0 5
position
ˇˇ6 >
)
ˇˇ> ?
{
ÄÄ 
t
ÅÅ 
=
ÅÅ 
tween
ÅÅ 
;
ÅÅ 
this
ÇÇ 
.
ÇÇ 
position
ÇÇ 
=
ÇÇ 
position
ÇÇ  (
;
ÇÇ( )
}
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
class
ÜÜ 
WaitForStart
ÜÜ !
:
ÜÜ" #$
CustomYieldInstruction
ÜÜ$ :
{
áá 	
public
àà 
override
àà 
bool
àà  
keepWaiting
àà! ,
{
àà- .
get
àà/ 2
{
àà3 4
return
ââ 
t
ââ 
.
ââ 
active
ââ 
&&
ââ  "
!
ââ# $
t
ââ$ %
.
ââ% &

playedOnce
ââ& 0
;
ââ0 1
}
ää 
}
ää 
readonly
ãã 
Tween
ãã 
t
ãã 
;
ãã 
public
åå 
WaitForStart
åå 
(
åå  
Tween
åå  %
tween
åå& +
)
åå+ ,
{
çç 
t
éé 
=
éé 
tween
éé 
;
éé 
}
èè 
}
êê 	
}
ëë 
}ìì ∆8
àC:\Hochschule\Projektarbeit\Unity\GitHubArMidiController\ArMidiController\Assets\Plugins\Demigiant\DOTween\Modules\DOTweenModuleUtils.cs
	namespace 	
DG
 
. 
Tweening 
{ 
public 
static 
class 
DOTweenModuleUtils '
{ 
static 
bool 
_initialized  
;  !
[$$ 	
UnityEngine$$	 
.$$ 
	Scripting$$ 
.$$ 
Preserve$$ '
]$$' (
public&& 
static&& 
void&& 
Init&& 
(&&  
)&&  !
{'' 	
if(( 
((( 
_initialized(( 
)(( 
return(( $
;(($ %
_initialized** 
=** 
true** 
;**  "
DOTweenExternalCommand++ "
.++" # 
SetOrientationOnPath++# 7
+=++8 :
Physics++; B
.++B C 
SetOrientationOnPath++C W
;++W X
UnityEditor11 
.11 
EditorApplication11 )
.11) * 
playModeStateChanged11* >
+=11? A 
PlaymodeStateChanged11B V
;11V W
}44 	
[88 	
UnityEngine88	 
.88 
	Scripting88 
.88 
Preserve88 '
]88' (
static:: 
void:: 
	Preserver:: 
(:: 
):: 
{;; 	
Assembly<< 
[<< 
]<< 
loadedAssemblies<< '
=<<( )
	AppDomain<<* 3
.<<3 4
CurrentDomain<<4 A
.<<A B
GetAssemblies<<B O
(<<O P
)<<P Q
;<<Q R

MethodInfo== 
mi== 
=== 
typeof== "
(==" #
MonoBehaviour==# 0
)==0 1
.==1 2
	GetMethod==2 ;
(==; <
$str==< B
)==B C
;==C D
}>> 	
staticII 
voidII  
PlaymodeStateChangedII (
(II( )
UnityEditorII) 4
.II4 5
PlayModeStateChangeII5 H
stateIII N
)IIN O
{KK 	
ifLL 
(LL 
DOTweenLL 
.LL 
instanceLL  
==LL! #
nullLL$ (
)LL( )
returnLL* 0
;LL0 1
DOTweenMM 
.MM 
instanceMM 
.MM 
OnApplicationPauseMM /
(MM/ 0
UnityEditorMM0 ;
.MM; <
EditorApplicationMM< M
.MMM N
isPausedMMN V
)MMV W
;MMW X
}NN 	
publicUU 
staticUU 
classUU 
PhysicsUU #
{VV 	
publicXX 
staticXX 
voidXX  
SetOrientationOnPathXX 3
(XX3 4
PathOptionsXX4 ?
optionsXX@ G
,XXG H
TweenXXI N
tXXO P
,XXP Q

QuaternionXXR \
newRotXX] c
,XXc d
	TransformXXe n
transXXo t
)XXt u
{YY 
if[[ 
([[ 
options[[ 
.[[ 
isRigidbody[[ '
)[[' (
([[) *
([[* +
	Rigidbody[[+ 4
)[[4 5
t[[5 6
.[[6 7
target[[7 =
)[[= >
.[[> ?
rotation[[? G
=[[H I
newRot[[J P
;[[P Q
else\\ 
trans\\ 
.\\ 
rotation\\ #
=\\$ %
newRot\\& ,
;\\, -
}`` 
publiccc 
staticcc 
boolcc 
HasRigidbody2Dcc -
(cc- .
	Componentcc. 7
targetcc8 >
)cc> ?
{dd 
returnff 
targetff 
.ff 
GetComponentff *
<ff* +
Rigidbody2Dff+ 6
>ff6 7
(ff7 8
)ff8 9
!=ff: <
nullff= A
;ffA B
}jj 
[rr 
UnityEnginerr 
.rr 
	Scriptingrr "
.rr" #
Preserverr# +
]rr+ ,
publictt 
statictt 
booltt 
HasRigidbodytt +
(tt+ ,
	Componenttt, 5
targettt6 <
)tt< =
{uu 
returnww 
targetww 
.ww 
GetComponentww *
<ww* +
	Rigidbodyww+ 4
>ww4 5
(ww5 6
)ww6 7
!=ww8 :
nullww; ?
;ww? @
}{{ 
[ 
UnityEngine 
. 
	Scripting "
." #
Preserve# +
]+ ,
public
ÅÅ 
static
ÅÅ 
TweenerCore
ÅÅ %
<
ÅÅ% &
Vector3
ÅÅ& -
,
ÅÅ- .
Path
ÅÅ/ 3
,
ÅÅ3 4
PathOptions
ÅÅ5 @
>
ÅÅ@ A$
CreateDOTweenPathTween
ÅÅB X
(
ÅÅX Y
MonoBehaviour
ÇÇ 
target
ÇÇ $
,
ÇÇ$ %
bool
ÇÇ& *
tweenRigidbody
ÇÇ+ 9
,
ÇÇ9 :
bool
ÇÇ; ?
isLocal
ÇÇ@ G
,
ÇÇG H
Path
ÇÇI M
path
ÇÇN R
,
ÇÇR S
float
ÇÇT Y
duration
ÇÇZ b
,
ÇÇb c
PathMode
ÇÇd l
pathMode
ÇÇm u
)
ÉÉ 
{
ÉÉ 
TweenerCore
ÑÑ 
<
ÑÑ 
Vector3
ÑÑ #
,
ÑÑ# $
Path
ÑÑ% )
,
ÑÑ) *
PathOptions
ÑÑ+ 6
>
ÑÑ6 7
t
ÑÑ8 9
;
ÑÑ9 :
	Rigidbody
ÜÜ 
rBody
ÜÜ 
=
ÜÜ  !
tweenRigidbody
ÜÜ" 0
?
ÜÜ1 2
target
ÜÜ3 9
.
ÜÜ9 :
GetComponent
ÜÜ: F
<
ÜÜF G
	Rigidbody
ÜÜG P
>
ÜÜP Q
(
ÜÜQ R
)
ÜÜR S
:
ÜÜT U
null
ÜÜV Z
;
ÜÜZ [
if
áá 
(
áá 
tweenRigidbody
áá "
&&
áá# %
rBody
áá& +
!=
áá, .
null
áá/ 3
)
áá3 4
{
áá5 6
t
àà 
=
àà 
isLocal
àà 
?
ââ 
rBody
ââ 
.
ââ  
DOLocalPath
ââ  +
(
ââ+ ,
path
ââ, 0
,
ââ0 1
duration
ââ2 :
,
ââ: ;
pathMode
ââ< D
)
ââD E
:
ää 
rBody
ää 
.
ää  
DOPath
ää  &
(
ää& '
path
ää' +
,
ää+ ,
duration
ää- 5
,
ää5 6
pathMode
ää7 ?
)
ää? @
;
ää@ A
}
ãã 
else
ãã 
{
ãã 
t
åå 
=
åå 
isLocal
åå 
?
çç 
target
çç  
.
çç  !
	transform
çç! *
.
çç* +
DOLocalPath
çç+ 6
(
çç6 7
path
çç7 ;
,
çç; <
duration
çç= E
,
ççE F
pathMode
ççG O
)
ççO P
:
éé 
target
éé  
.
éé  !
	transform
éé! *
.
éé* +
DOPath
éé+ 1
(
éé1 2
path
éé2 6
,
éé6 7
duration
éé8 @
,
éé@ A
pathMode
ééB J
)
ééJ K
;
ééK L
}
èè 
return
ïï 
t
ïï 
;
ïï 
}
ññ 
}
ôô 	
}
öö 
}õõ 